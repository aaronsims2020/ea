/*
 * OptinWizardMainPanel.java
 *
 * Created on March 16, 2004, 11:25 PM
 */

package com.trinity.ea.design.optin.provider.panels;
import com.trinity.ea.design.common.panel.EAPanel;
import com.trinity.ea.design.rules.builder.DesignerRuleBuilder;
import com.trinity.ea.design.optin.provider.OptinWizard;
import com.trinity.ea.design.optin.provider.panels.OptinWizardStep1;
import com.trinity.ea.design.optin.provider.panels.AWeberProviderMainPanel;
import com.trinity.ea.design.optin.provider.panels.GetRespProviderMainPanel;
import com.trinity.ea.design.optin.provider.panels.CustomProviderMainPanel;
import com.trinity.ea.design.optin.provider.panels.FindProviderWizardPanel;
import com.trinity.ea.util.BrowserLauncher;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.awt.BorderLayout;
import javax.swing.JPanel;
import java.util.ArrayList;

/**
 *
 * @author  aaronsc Trinity Software
 * Copyright Â©2004 Trinity Software. All rights reserved.
 */
public class OptinWizardMainPanel extends EAPanel {
    OptinWizardStep1 optinWizardStepNumber1;
    FindProviderWizardPanel findProvWizardPanel;
    AWeberProviderMainPanel aweber;
    GetRespProviderMainPanel getresp;
    CustomProviderMainPanel custom;
    private Object[] providerPanelNames = null;
    private int wizardPanel = 0;
    private boolean findPanel = false;
    private javax.swing.JPanel ContentPanel;


    /** Creates new form OptinWizardMainPanel */
    public OptinWizardMainPanel() 
    {
	try
	{
        initialize();
        initComponents();
	  optinWizardStepNumber1.setParentComponent(this);
	}
	catch(Exception e)
	{
		e.printStackTrace();
	}
    }

    public OptinWizardMainPanel(int theWizPanel) 
    {
	try
	{
        initialize();
	  if(theWizPanel==0)
	  {
        	initComponents(0);
	  	optinWizardStepNumber1.setParentComponent(this);
	  }
	  else if(theWizPanel==1)
	  {
            initComponents(1);
		findProvWizardPanel.setParentComponent(this);
		findPanel=true;
	  }
	}
	catch(Exception e)
	{
		e.printStackTrace();
	}
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
	  setLayout(new java.awt.BorderLayout());
        ContentPanel = new javax.swing.JPanel();
        ContentPanel.setLayout(new java.awt.BorderLayout());
	  optinWizardStepNumber1 = new OptinWizardStep1();
	  setContentPanel(optinWizardStepNumber1);
	  add(ContentPanel, java.awt.BorderLayout.CENTER);

   }//GEN-END:initComponents
     
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents(int wizPanel) {//GEN-BEGIN:initComponents
	  setLayout(new java.awt.BorderLayout());
        ContentPanel = new javax.swing.JPanel();
        ContentPanel.setLayout(new java.awt.BorderLayout());
	  if(wizPanel==0)
	  {
		optinWizardStepNumber1 = new OptinWizardStep1();
	      setContentPanel(optinWizardStepNumber1);
	  }
	  else if(wizPanel==1)
	  {
		findProvWizardPanel = new FindProviderWizardPanel();
	      setContentPanel(findProvWizardPanel);
	  }

	  add(ContentPanel, java.awt.BorderLayout.CENTER);

   }//GEN-END:initComponents
         
    // Variables declaration - do not modify//GEN-BEGIN:variables
    
    // End of variables declaration//GEN-END:variables

  
  private void setStep1Panel()
  {
    try
    {
	  TheWizardPanelReference.setVisible(false);
        ContentPanel.removeAll();        
        ContentPanel.add(optinWizardStepNumber1, java.awt.BorderLayout.CENTER);     
        optinWizardStepNumber1.setVisible(true);
    }
    catch(Exception e)
    {
        e.printStackTrace();
    }
  }  

  private EAPanel TheWizardPanelReference = new EAPanel();
  private void setContentPanel(EAPanel theContentPanel)
  {
    try
    {
	  TheWizardPanelReference.setVisible(false);
        ContentPanel.remove(TheWizardPanelReference);        
        TheWizardPanelReference = theContentPanel;
        ContentPanel.add(TheWizardPanelReference, java.awt.BorderLayout.CENTER);     
        TheWizardPanelReference.setVisible(true);

    }
    catch(Exception e)
    {
        e.printStackTrace();
    }
  }  

  private EAPanel getProviderPanel(int intProviderPanel)
  {
    try
    {
	  return (EAPanel)providerPanelNames[intProviderPanel];
    }
    catch(Exception e)
    {
        e.printStackTrace();
    }
	return null;
  }     

	private void initialize()
	{
		try
		{
			providerPanelNames = getStringArraysFromString(DesignerRuleBuilder.get("sbOptinProviderPanels"));
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
	}

   private Object[] getStringArraysFromString(String textArrayString)
    {
        ArrayList aryList = new ArrayList();
        String tempString = "";
        try
        {
            while(textArrayString.indexOf(",")!=-1)
            {
                tempString = textArrayString.substring(0,textArrayString.indexOf(","));
                textArrayString = textArrayString.substring(textArrayString.indexOf(",") + 1);
                aryList.add(tempString);
            }
            aryList.add(textArrayString);
            aryList.trimToSize();
        }
        catch(NullPointerException e)
        {
         
        }

        return aryList.toArray();
    }
	
	public void setNext(int intProviderPanel)
	{
		try
		{
			if(intProviderPanel == 0)
			{
				aweber = new AWeberProviderMainPanel();
				aweber.setMasterStatusController(this);
				setContentPanel(aweber);
			}
			else if(intProviderPanel == 1)
			{
				getresp = new GetRespProviderMainPanel();
				getresp.setMasterStatusController(this);
				setContentPanel(getresp);
			}
			else if(intProviderPanel == 2)
			{
				custom = new CustomProviderMainPanel();
				custom.setMasterStatusController(this);
				setContentPanel(custom);
			}
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
	      wizardPanel++;
	}		

	public void setBack()
	{
		try
		{
			if(wizardPanel!=0 && findPanel == false)
			{
				setContentPanel(optinWizardStepNumber1);
				wizardPanel=0;
			}
			else if(findPanel==true)
			{
				setContentPanel(findProvWizardPanel);
			}
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}		
	}

	public void setLoadWebPage(int intProvider)
	{
		try
		{
			if(intProvider == 0)
			{
        try
        {
        	if(DesignerRuleBuilder.get("optinPreferredProvidersFindAProviderURL")!=null)
        	{         
			Object[] theObjArray = getStringArraysFromString(DesignerRuleBuilder.get("optinPreferredProvidersFindAProviderURL"));
            	BrowserLauncher.openURL((String)theObjArray[0]);
        	}
        }
	  catch(Exception e)
        {
		JOptionPane.showMessageDialog(new JFrame(), "No Information available.");
	  }
			}
			else if(intProvider == 1)
			{
        try
        {
        	if(DesignerRuleBuilder.get("optinPreferredProvidersFindAProviderURL")!=null)
        	{         
			Object[] theObjArray = getStringArraysFromString(DesignerRuleBuilder.get("optinPreferredProvidersFindAProviderURL"));
            	BrowserLauncher.openURL((String)theObjArray[1]);
        	}
        }
	  catch(Exception e)
        {
		JOptionPane.showMessageDialog(new JFrame(), "No Information available.");
	  }
			}
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}

		/*try
		{
			optinWiz1.setFinishConfigurationAction();
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}*/
	}		


	public void setFinishConfigurationAction()
	{
		try
		{
			optinWiz1.setFinishConfigurationAction();
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
	}

	public void setLaunchAdvancedDesigner()
	{
		try
		{
			optinWiz1.setLaunchAdvancedDesigner();
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
	}

	public void hideDesigner()
	{
		try
		{
			optinWiz1.hideDesigner();
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
	}
	OptinWizard optinWiz1 = null;
	public void setMasterControlPanel(OptinWizard theOptinWiz)
	{	
		optinWiz1 = theOptinWiz;
	}
}
