/*
 * MaxURLsAllowed.java
 *
 * Created on May 17, 2004, 12:56 PM
 */

package com.trinity.ea.design.autoupdate.config;

import com.trinity.ea.design.common.panel.EAPanel;
import com.trinity.ea.design.common.file.ProjectManager;
import com.trinity.ea.design.common.panel.EAPropertiesPanel;
import javax.swing.SpinnerNumberModel;
import javax.swing.JSpinner;
import javax.swing.JTextArea;
import javax.swing.BoxLayout;
import java.awt.event.MouseEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.InputMethodEvent;
import java.awt.event.InputMethodListener;
import java.awt.Font;
import java.awt.Dimension;
import java.awt.Color;

/** 
 *
 * @author  aaronsc Trinity Software
 * Copyright Â©2004 Trinity Software. All rights reserved.
 */
public class MaxURLsAllowed extends EAPanel {
    private Color backgroundColor = new java.awt.Color(255, 255, 255);
    private Color txtColor = new java.awt.Color(0, 0, 0);   
    
    /** Creates new form MaxURLsAllowed */ 
    public MaxURLsAllowed() {
        initComponents();
	  setProjectData();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        taDesc = new javax.swing.JTextArea();
     	  maxURLsSpinner = new JSpinner(new SpinnerNumberModel(new Integer(3),new Integer(1),new Integer(100),new Integer(1)));
        SpinnerPanel = new javax.swing.JPanel();
        SpinnerPanelWest = new javax.swing.JPanel();
        SpinnerPanelEast = new javax.swing.JPanel();
        SpinnerPanelNorth = new javax.swing.JPanel();
        SpinnerPanelSouth = new javax.swing.JPanel();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.X_AXIS));
        taDesc.setFont(new java.awt.Font("Arial", 0, 11));
        taDesc.setLineWrap(true);
        taDesc.setText("The maximum number of URLs to attempt downloading the update file.");
        taDesc.setWrapStyleWord(true);
        taDesc.setBorder(null);
        taDesc.setPreferredSize(new java.awt.Dimension(200, 30));
        add(taDesc);
	  setBackground(new java.awt.Color(255, 255, 255));
        SpinnerPanel.setLayout(new java.awt.BorderLayout());

        SpinnerPanel.setBackground(new java.awt.Color(255, 255, 255));
        SpinnerPanel.setMaximumSize(new java.awt.Dimension(37, 24));
        SpinnerPanel.setMinimumSize(new java.awt.Dimension(37, 24));
        SpinnerPanel.setPreferredSize(new java.awt.Dimension(37, 24));
        SpinnerPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SpinnerPanelMouseExited(evt);
            }
        });

        SpinnerPanelWest.setLayout(new java.awt.BorderLayout());

        SpinnerPanelWest.setBackground(new java.awt.Color(255, 255, 255));
        SpinnerPanelWest.setMaximumSize(new java.awt.Dimension(1, 24));
        SpinnerPanelWest.setMinimumSize(new java.awt.Dimension(1, 1));
        SpinnerPanelWest.setPreferredSize(new java.awt.Dimension(1, 1));
        SpinnerPanel.add(SpinnerPanelWest, java.awt.BorderLayout.WEST);

        SpinnerPanelEast.setLayout(new java.awt.BorderLayout());

        SpinnerPanelEast.setBackground(new java.awt.Color(255, 255, 255));
        SpinnerPanelEast.setMaximumSize(new java.awt.Dimension(1, 24));
        SpinnerPanelEast.setMinimumSize(new java.awt.Dimension(1, 1));
        SpinnerPanelEast.setPreferredSize(new java.awt.Dimension(1, 1));
        SpinnerPanel.add(SpinnerPanelEast, java.awt.BorderLayout.EAST);

        SpinnerPanelNorth.setLayout(new java.awt.BorderLayout());

        SpinnerPanelNorth.setBackground(new java.awt.Color(255, 255, 255));
        SpinnerPanelNorth.setMaximumSize(new java.awt.Dimension(37, 1));
        SpinnerPanelNorth.setMinimumSize(new java.awt.Dimension(1, 1));
        SpinnerPanelNorth.setPreferredSize(new java.awt.Dimension(1, 1));
        SpinnerPanel.add(SpinnerPanelNorth, java.awt.BorderLayout.NORTH);

        SpinnerPanelSouth.setLayout(new java.awt.BorderLayout());

        SpinnerPanelSouth.setBackground(new java.awt.Color(255, 255, 255));
        SpinnerPanelSouth.setMaximumSize(new java.awt.Dimension(37, 1));
        SpinnerPanelSouth.setMinimumSize(new java.awt.Dimension(1, 1));
        SpinnerPanelSouth.setPreferredSize(new java.awt.Dimension(1, 1));
        SpinnerPanel.add(SpinnerPanelSouth, java.awt.BorderLayout.SOUTH);

        maxURLsSpinner.setBackground(new java.awt.Color(255, 255, 255));
        maxURLsSpinner.setFont(new java.awt.Font("Arial", 0, 12));
        maxURLsSpinner.setForeground(new java.awt.Color(255, 255, 255));
        maxURLsSpinner.setMinimumSize(new java.awt.Dimension(35, 20));
        maxURLsSpinner.setPreferredSize(new java.awt.Dimension(35, 22));
        maxURLsSpinner.setMaximumSize(new java.awt.Dimension(35, 22));
	  maxURLsSpinner.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SpinnerPanelMouseExited(evt);
            }
        });
        SpinnerPanel.add(maxURLsSpinner, java.awt.BorderLayout.CENTER);

        add(SpinnerPanel);
    }//GEN-END:initComponents

    public synchronized void setProjectData()
    {
        try
        {
            // Auto Update Maximum URLs JSpinner value
            if(ProjectManager.get("autoUpdateMaxBaseURLs")!=null)
            {
		    maxURLsSpinner.setOpaque(true);
   		    maxURLsSpinner.setModel(new SpinnerNumberModel(Integer.valueOf(ProjectManager.get("autoUpdateMaxBaseURLs")),new Integer(1),new Integer(100),new Integer(1)));
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
  
    public synchronized void getDataUpdate()
    {
	try
	{
            // Auto Update Maximum URLs JSpinner value
            SpinnerNumberModel sm = (SpinnerNumberModel)maxURLsSpinner.getModel();
            ProjectManager.putTempNoFileWrite("autoUpdateMaxBaseURLs", String.valueOf(sm.getNumber().intValue()));            
            ProjectManager.saveTempNow();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }    

    public void setText(String cbText)
    {
        try
        {
            taDesc.setText(cbText);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    
    public String getText()
    {
        try
        {
            return taDesc.getText();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        return null;
    }
    
    public void setBackgroundColor(Color BGColor)
    {
        try
        {
            backgroundColor = BGColor;
	  	setBackground(BGColor);
            maxURLsSpinner.setBackground(BGColor);
            maxURLsSpinner.setForeground(BGColor);           
            taDesc.setBackground(BGColor);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }      
    }
    
    public Color getBackgroundColor()
    {
        return backgroundColor;
    }
    
    public void setTextColor(Color textColor)
    {
        try
        {
            txtColor = textColor;
            taDesc.setForeground(textColor); 
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    
    public Color getTextColor()
    {
        return taDesc.getForeground(); 
    }

    private void SpinnerPanelMouseExited(java.awt.event.MouseEvent evt) {
	  getDataUpdate();
        if(((EAPropertiesPanel)getParentComponent()).getEAListItemsArrayLength()<Integer.valueOf(ProjectManager.get("autoUpdateMaxBaseURLs")).intValue())
	  {
		 ((EAPropertiesPanel)getParentComponent()).setMaxEAListItems(Integer.valueOf(ProjectManager.get("autoUpdateMaxBaseURLs")).intValue());
		 ((EAPropertiesPanel)getParentComponent()).setAddButtonEnabled(true);
	  }
	  else
	  {
		 ((EAPropertiesPanel)getParentComponent()).setMaxEAListItems(Integer.valueOf(ProjectManager.get("autoUpdateMaxBaseURLs")).intValue());
		 ((EAPropertiesPanel)getParentComponent()).setAddButtonEnabled(false);
	  }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner maxURLsSpinner;
    private javax.swing.JTextArea taDesc;
    private javax.swing.JPanel SpinnerPanel;
    private javax.swing.JPanel SpinnerPanelEast;
    private javax.swing.JPanel SpinnerPanelNorth;
    private javax.swing.JPanel SpinnerPanelSouth;
    private javax.swing.JPanel SpinnerPanelWest;
    // End of variables declaration//GEN-END:variables
    
}
