/*
 * AddFileDialog.java
 *
 * Created on November 11, 2004, 9:25 PM
 */

package com.trinity.ea.design.autoupdate.builder;
import com.trinity.ea.design.common.file.ProjectManager;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.net.MalformedURLException;
import java.awt.*;
import javax.swing.*; 

/**
 *
 * @author  aaronsc Trinity Software
 * Copyright Â©2004-2005 Trinity Software. All rights reserved.
 */
public class AddFileDialog extends javax.swing.JDialog {
    private JFileChooser imageFileChooser = new JFileChooser(); 
    private static boolean isOK = false;
    private static boolean boolOverwriteExistingFile = false;
    private static String downloadURL = "";    
    private static String installFile = "";       
    private Frame parent1;
    public static String getDownloadURL()
    {
        return downloadURL;
    }
    
    public static String getInstallFile()
    {
        return installFile;
    }
    
    public static String getOverwriteExistingFile()
    {
        if(boolOverwriteExistingFile == true)
        {
            return "true";
        }
        else
        {
            return "false";
        }
    }
    
    /** Creates new form AddFileDialog */
    public AddFileDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        parent1 = parent;
        initComponents();
        setSize(530,165);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();

        // Determine the new location of the window
        int w = getSize().width;
        int h = getSize().height;
        int x = (dim.width-w)/2;
        int y = (dim.height-h)/2;
        setResizable(false);
        // Move the window
        setLocation(x, y);
    }
    
  public static boolean showDialog(Frame parent,String title) 
  {
    AddFileDialog dialog = new AddFileDialog(parent,true);
    dialog.setTitle(title);
    dialog.setVisible(true);
    boolean result = false;
    if(dialog.isOK==true)
    {
        result = true;
    }
    else
    {
        result = false;
    }
    installFile = tfSplashImage.getText();
    downloadURL = tfDownloadURL.getText();
    if(cbOverwriteFileEnabled.isSelected()==true)
    {
        boolOverwriteExistingFile = true;       
    }
    else
    {
        boolOverwriteExistingFile = false;          
    }
    dialog.dispose();
    return result;
  }    
  
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        ProjectLookAndFeelImages = new javax.swing.JPanel();
        ImageDescriptionLabel = new javax.swing.JPanel();
        LeftUIFiller2 = new javax.swing.JLabel();
        ImageDescription = new javax.swing.JLabel();
        ProjectLocationsCenterPanel1 = new javax.swing.JPanel();
        lFiller24 = new javax.swing.JLabel();
        lBuildLocation1 = new javax.swing.JLabel();
        tfSplashImage = new javax.swing.JTextField();
        lFiller27 = new javax.swing.JLabel();
        SplashImageChooseButton = new javax.swing.JButton();
        lFiller26 = new javax.swing.JLabel();
        UIChoicesBottomPanel8 = new javax.swing.JPanel();
        ImageDescriptionLabel1 = new javax.swing.JPanel();
        LeftUIFiller3 = new javax.swing.JLabel();
        ImageDescription1 = new javax.swing.JLabel();
        ProjectLocationsCenterPanel3 = new javax.swing.JPanel();
        lFiller29 = new javax.swing.JLabel();
        lBuildLocation2 = new javax.swing.JLabel();
        tfDownloadURL = new javax.swing.JTextField();
        lFiller32 = new javax.swing.JLabel();
        UIChoicesBottomPanel7 = new javax.swing.JPanel();
        ProjectLocationsCenterPanel2 = new javax.swing.JPanel();
        CheckBoxPanel = new javax.swing.JPanel();
        cbOverwriteFileEnabled = new javax.swing.JCheckBox();
        ProjectLocationsCenterPanel4 = new javax.swing.JPanel();
        lFiller25 = new javax.swing.JLabel();
        CancelButton = new javax.swing.JButton();
        lFiller28 = new javax.swing.JLabel();
        OKButton = new javax.swing.JButton();
        lFiller31 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        ProjectLookAndFeelImages.setLayout(new javax.swing.BoxLayout(ProjectLookAndFeelImages, javax.swing.BoxLayout.Y_AXIS));

        ProjectLookAndFeelImages.setBackground(new java.awt.Color(140, 160, 210));
        ProjectLookAndFeelImages.setMaximumSize(new java.awt.Dimension(32767, 78));
        ProjectLookAndFeelImages.setMinimumSize(new java.awt.Dimension(10, 78));
        ProjectLookAndFeelImages.setPreferredSize(new java.awt.Dimension(10, 78));
        ImageDescriptionLabel.setLayout(new javax.swing.BoxLayout(ImageDescriptionLabel, javax.swing.BoxLayout.X_AXIS));

        ImageDescriptionLabel.setBackground(new java.awt.Color(140, 160, 210));
        LeftUIFiller2.setMaximumSize(new java.awt.Dimension(10, 10));
        LeftUIFiller2.setMinimumSize(new java.awt.Dimension(10, 10));
        LeftUIFiller2.setPreferredSize(new java.awt.Dimension(10, 10));
        ImageDescriptionLabel.add(LeftUIFiller2);

        ImageDescription.setFont(new java.awt.Font("Arial", 0, 12));
        ImageDescription.setText("The file install location from application root folder (typically filename, or my_dir/filename).");
        ImageDescription.setMaximumSize(new java.awt.Dimension(32767, 15));
        ImageDescriptionLabel.add(ImageDescription);

        ProjectLookAndFeelImages.add(ImageDescriptionLabel);

        ProjectLocationsCenterPanel1.setLayout(new javax.swing.BoxLayout(ProjectLocationsCenterPanel1, javax.swing.BoxLayout.X_AXIS));

        ProjectLocationsCenterPanel1.setBackground(new java.awt.Color(140, 160, 210));
        ProjectLocationsCenterPanel1.setMaximumSize(new java.awt.Dimension(2147483647, 30));
        ProjectLocationsCenterPanel1.setMinimumSize(new java.awt.Dimension(600, 30));
        ProjectLocationsCenterPanel1.setPreferredSize(new java.awt.Dimension(800, 30));
        lFiller24.setBackground(new java.awt.Color(140, 160, 210));
        lFiller24.setText("   ");
        lFiller24.setMaximumSize(new java.awt.Dimension(10, 15));
        lFiller24.setMinimumSize(new java.awt.Dimension(10, 16));
        lFiller24.setPreferredSize(new java.awt.Dimension(10, 16));
        ProjectLocationsCenterPanel1.add(lFiller24);

        lBuildLocation1.setBackground(new java.awt.Color(140, 160, 210));
        lBuildLocation1.setDisplayedMnemonic('T');
        lBuildLocation1.setFont(new java.awt.Font("Arial", 0, 12));
        lBuildLocation1.setLabelFor(tfSplashImage);
        lBuildLocation1.setText("Update File Location (Target):");
        lBuildLocation1.setMaximumSize(new java.awt.Dimension(170, 15));
        lBuildLocation1.setMinimumSize(new java.awt.Dimension(170, 15));
        lBuildLocation1.setPreferredSize(new java.awt.Dimension(170, 15));
        ProjectLocationsCenterPanel1.add(lBuildLocation1);

        tfSplashImage.setBackground(new java.awt.Color(204, 204, 204));
        tfSplashImage.setFont(new java.awt.Font("Arial", 0, 12));
        tfSplashImage.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        tfSplashImage.setMaximumSize(new java.awt.Dimension(2147483647, 20));
        tfSplashImage.setMinimumSize(new java.awt.Dimension(200, 20));
        tfSplashImage.setPreferredSize(new java.awt.Dimension(300, 20));
        ProjectLocationsCenterPanel1.add(tfSplashImage);

        lFiller27.setBackground(new java.awt.Color(140, 160, 210));
        lFiller27.setText("   ");
        lFiller27.setMaximumSize(new java.awt.Dimension(10, 15));
        lFiller27.setMinimumSize(new java.awt.Dimension(10, 16));
        lFiller27.setPreferredSize(new java.awt.Dimension(10, 16));
        ProjectLocationsCenterPanel1.add(lFiller27);

        SplashImageChooseButton.setFont(new java.awt.Font("Arial", 0, 12));
        SplashImageChooseButton.setMnemonic('h');
        SplashImageChooseButton.setText("Choose...");
        SplashImageChooseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SplashImageChooseButtonActionPerformed(evt);
            }
        });

        ProjectLocationsCenterPanel1.add(SplashImageChooseButton);

        lFiller26.setBackground(new java.awt.Color(140, 160, 210));
        lFiller26.setText("   ");
        lFiller26.setMaximumSize(new java.awt.Dimension(15, 15));
        lFiller26.setMinimumSize(new java.awt.Dimension(15, 16));
        lFiller26.setPreferredSize(new java.awt.Dimension(15, 16));
        ProjectLocationsCenterPanel1.add(lFiller26);

        ProjectLookAndFeelImages.add(ProjectLocationsCenterPanel1);

        UIChoicesBottomPanel8.setBackground(new java.awt.Color(140, 160, 210));
        UIChoicesBottomPanel8.setMaximumSize(new java.awt.Dimension(32767, 4));
        UIChoicesBottomPanel8.setMinimumSize(new java.awt.Dimension(5, 4));
        UIChoicesBottomPanel8.setPreferredSize(new java.awt.Dimension(200, 4));
        ProjectLookAndFeelImages.add(UIChoicesBottomPanel8);

        ImageDescriptionLabel1.setLayout(new javax.swing.BoxLayout(ImageDescriptionLabel1, javax.swing.BoxLayout.X_AXIS));

        ImageDescriptionLabel1.setBackground(new java.awt.Color(140, 160, 210));
        LeftUIFiller3.setMaximumSize(new java.awt.Dimension(10, 10));
        LeftUIFiller3.setMinimumSize(new java.awt.Dimension(10, 10));
        LeftUIFiller3.setPreferredSize(new java.awt.Dimension(10, 10));
        ImageDescriptionLabel1.add(LeftUIFiller3);

        ImageDescription1.setFont(new java.awt.Font("Arial", 0, 12));
        ImageDescription1.setText("The file download location (URL) (typically a web based file: http://mydomain.com/my_file).");
        ImageDescription1.setMaximumSize(new java.awt.Dimension(32767, 15));
        ImageDescriptionLabel1.add(ImageDescription1);

        ProjectLookAndFeelImages.add(ImageDescriptionLabel1);

        ProjectLocationsCenterPanel3.setLayout(new javax.swing.BoxLayout(ProjectLocationsCenterPanel3, javax.swing.BoxLayout.X_AXIS));

        ProjectLocationsCenterPanel3.setBackground(new java.awt.Color(140, 160, 210));
        ProjectLocationsCenterPanel3.setMaximumSize(new java.awt.Dimension(2147483647, 30));
        ProjectLocationsCenterPanel3.setMinimumSize(new java.awt.Dimension(600, 30));
        ProjectLocationsCenterPanel3.setPreferredSize(new java.awt.Dimension(800, 30));
        lFiller29.setBackground(new java.awt.Color(140, 160, 210));
        lFiller29.setText("   ");
        lFiller29.setMaximumSize(new java.awt.Dimension(10, 15));
        lFiller29.setMinimumSize(new java.awt.Dimension(10, 16));
        lFiller29.setPreferredSize(new java.awt.Dimension(10, 16));
        ProjectLocationsCenterPanel3.add(lFiller29);

        lBuildLocation2.setBackground(new java.awt.Color(140, 160, 210));
        lBuildLocation2.setDisplayedMnemonic('S');
        lBuildLocation2.setFont(new java.awt.Font("Arial", 0, 12));
        lBuildLocation2.setLabelFor(tfDownloadURL);
        lBuildLocation2.setText("File Download URL (Source):");
        lBuildLocation2.setMaximumSize(new java.awt.Dimension(170, 15));
        lBuildLocation2.setMinimumSize(new java.awt.Dimension(170, 15));
        lBuildLocation2.setPreferredSize(new java.awt.Dimension(170, 15));
        ProjectLocationsCenterPanel3.add(lBuildLocation2);

        tfDownloadURL.setBackground(new java.awt.Color(204, 204, 204));
        tfDownloadURL.setFont(new java.awt.Font("Arial", 0, 12));
        tfDownloadURL.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        tfDownloadURL.setMaximumSize(new java.awt.Dimension(2147483647, 20));
        tfDownloadURL.setMinimumSize(new java.awt.Dimension(200, 20));
        tfDownloadURL.setPreferredSize(new java.awt.Dimension(300, 20));
        ProjectLocationsCenterPanel3.add(tfDownloadURL);

        lFiller32.setBackground(new java.awt.Color(140, 160, 210));
        lFiller32.setText("   ");
        lFiller32.setMaximumSize(new java.awt.Dimension(15, 15));
        lFiller32.setMinimumSize(new java.awt.Dimension(15, 16));
        lFiller32.setPreferredSize(new java.awt.Dimension(15, 16));
        ProjectLocationsCenterPanel3.add(lFiller32);

        ProjectLookAndFeelImages.add(ProjectLocationsCenterPanel3);

        UIChoicesBottomPanel7.setBackground(new java.awt.Color(140, 160, 210));
        UIChoicesBottomPanel7.setMaximumSize(new java.awt.Dimension(32767, 4));
        UIChoicesBottomPanel7.setMinimumSize(new java.awt.Dimension(5, 4));
        UIChoicesBottomPanel7.setPreferredSize(new java.awt.Dimension(200, 4));
        ProjectLookAndFeelImages.add(UIChoicesBottomPanel7);

        ProjectLocationsCenterPanel2.setLayout(new javax.swing.BoxLayout(ProjectLocationsCenterPanel2, javax.swing.BoxLayout.X_AXIS));

        ProjectLocationsCenterPanel2.setBackground(new java.awt.Color(140, 160, 210));
        ProjectLocationsCenterPanel2.setMaximumSize(new java.awt.Dimension(2147483647, 30));
        ProjectLocationsCenterPanel2.setMinimumSize(new java.awt.Dimension(600, 30));
        ProjectLocationsCenterPanel2.setPreferredSize(new java.awt.Dimension(800, 30));
        CheckBoxPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        CheckBoxPanel.setBackground(new java.awt.Color(140, 160, 210));
        CheckBoxPanel.setMinimumSize(new java.awt.Dimension(300, 10));
        CheckBoxPanel.setPreferredSize(new java.awt.Dimension(300, 10));
        cbOverwriteFileEnabled.setBackground(new java.awt.Color(140, 160, 210));
        cbOverwriteFileEnabled.setFont(new java.awt.Font("Arial", 0, 12));
        cbOverwriteFileEnabled.setMnemonic('v');
        cbOverwriteFileEnabled.setSelected(true);
        cbOverwriteFileEnabled.setText("Overwrite existing file");
        CheckBoxPanel.add(cbOverwriteFileEnabled);

        ProjectLocationsCenterPanel2.add(CheckBoxPanel);

        ProjectLocationsCenterPanel4.setLayout(new java.awt.FlowLayout());

        ProjectLocationsCenterPanel4.setBackground(new java.awt.Color(140, 160, 210));
        ProjectLocationsCenterPanel4.setMaximumSize(new java.awt.Dimension(2147483647, 30));
        ProjectLocationsCenterPanel4.setMinimumSize(new java.awt.Dimension(220, 30));
        ProjectLocationsCenterPanel4.setPreferredSize(new java.awt.Dimension(800, 30));
        lFiller25.setBackground(new java.awt.Color(140, 160, 210));
        lFiller25.setText("   ");
        lFiller25.setMaximumSize(new java.awt.Dimension(32767, 15));
        lFiller25.setMinimumSize(new java.awt.Dimension(10, 16));
        lFiller25.setPreferredSize(new java.awt.Dimension(10, 16));
        ProjectLocationsCenterPanel4.add(lFiller25);

        CancelButton.setFont(new java.awt.Font("Arial", 0, 12));
        CancelButton.setMnemonic('C');
        CancelButton.setText("Cancel");
        CancelButton.setMaximumSize(new java.awt.Dimension(87, 25));
        CancelButton.setMinimumSize(new java.awt.Dimension(87, 25));
        CancelButton.setPreferredSize(new java.awt.Dimension(87, 25));
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        ProjectLocationsCenterPanel4.add(CancelButton);

        lFiller28.setBackground(new java.awt.Color(140, 160, 210));
        lFiller28.setText("   ");
        lFiller28.setMaximumSize(new java.awt.Dimension(10, 15));
        lFiller28.setMinimumSize(new java.awt.Dimension(10, 16));
        lFiller28.setPreferredSize(new java.awt.Dimension(10, 16));
        ProjectLocationsCenterPanel4.add(lFiller28);

        OKButton.setFont(new java.awt.Font("Arial", 0, 12));
        OKButton.setMnemonic('O');
        OKButton.setText("OK");
        OKButton.setMaximumSize(new java.awt.Dimension(87, 25));
        OKButton.setMinimumSize(new java.awt.Dimension(87, 25));
        OKButton.setPreferredSize(new java.awt.Dimension(87, 25));
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        ProjectLocationsCenterPanel4.add(OKButton);

        lFiller31.setBackground(new java.awt.Color(140, 160, 210));
        lFiller31.setText("   ");
        lFiller31.setMaximumSize(new java.awt.Dimension(15, 15));
        lFiller31.setMinimumSize(new java.awt.Dimension(15, 16));
        lFiller31.setPreferredSize(new java.awt.Dimension(15, 16));
        ProjectLocationsCenterPanel4.add(lFiller31);

        ProjectLocationsCenterPanel2.add(ProjectLocationsCenterPanel4);

        ProjectLookAndFeelImages.add(ProjectLocationsCenterPanel2);

        getContentPane().add(ProjectLookAndFeelImages, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        isOK = false;
        setVisible(false);
    }//GEN-LAST:event_CancelButtonActionPerformed

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
        isOK = true;
        if(tfSplashImage.getText().equalsIgnoreCase("")==true || tfDownloadURL.getText().equalsIgnoreCase("")==true )
        {
            if(tfSplashImage.getText().equalsIgnoreCase("")==true)
            {
               JOptionPane.showMessageDialog(parent1,"Please specify a valid File Install Location.","Specify File Install Location",JOptionPane.INFORMATION_MESSAGE);            
            }
            else
            {
               JOptionPane.showMessageDialog(parent1,"Please specify a valid File Download URL.","Specify File Download URL",JOptionPane.INFORMATION_MESSAGE);            
            }
        }
        else
        {
             setVisible(false);           
        }
    }//GEN-LAST:event_OKButtonActionPerformed

    private void SplashImageChooseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SplashImageChooseButtonActionPerformed
	try
	{
            int result = imageFileChooser.showOpenDialog(this); 
            if(result == JFileChooser.APPROVE_OPTION) 
            { 
                tfSplashImage.setText(imageFileChooser.getSelectedFile().getName());
                tfSplashImage.setCaretPosition(0);
            }
	}
	catch(Exception e)
	{
		e.printStackTrace();
	}
    }//GEN-LAST:event_SplashImageChooseButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JPanel CheckBoxPanel;
    private javax.swing.JLabel ImageDescription;
    private javax.swing.JLabel ImageDescription1;
    private javax.swing.JPanel ImageDescriptionLabel;
    private javax.swing.JPanel ImageDescriptionLabel1;
    private javax.swing.JLabel LeftUIFiller2;
    private javax.swing.JLabel LeftUIFiller3;
    private javax.swing.JButton OKButton;
    private javax.swing.JPanel ProjectLocationsCenterPanel1;
    private javax.swing.JPanel ProjectLocationsCenterPanel2;
    private javax.swing.JPanel ProjectLocationsCenterPanel3;
    private javax.swing.JPanel ProjectLocationsCenterPanel4;
    private javax.swing.JPanel ProjectLookAndFeelImages;
    private javax.swing.JButton SplashImageChooseButton;
    private javax.swing.JPanel UIChoicesBottomPanel7;
    private javax.swing.JPanel UIChoicesBottomPanel8;
    private static javax.swing.JCheckBox cbOverwriteFileEnabled;
    private javax.swing.JLabel lBuildLocation1;
    private javax.swing.JLabel lBuildLocation2;
    private javax.swing.JLabel lFiller24;
    private javax.swing.JLabel lFiller25;
    private javax.swing.JLabel lFiller26;
    private javax.swing.JLabel lFiller27;
    private javax.swing.JLabel lFiller28;
    private javax.swing.JLabel lFiller29;
    private javax.swing.JLabel lFiller31;
    private javax.swing.JLabel lFiller32;
    private static javax.swing.JTextField tfDownloadURL;
    private static javax.swing.JTextField tfSplashImage;
    // End of variables declaration//GEN-END:variables
    
}
