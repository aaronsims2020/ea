/*
 * AutoUpdateEncryptionPanel.java
 *
 * Created on December 31, 2003, 6:21 PM
 */

package com.trinity.ea.design.autoupdate.encrypt;
import com.trinity.ea.design.common.panel.EAPanel;
import com.trinity.ea.design.common.file.ProjectManager;
import com.trinity.ea.design.autoupdate.encrypt.EncryptionConfigurationPanel;
import com.trinity.ea.design.autoupdate.encrypt.X500EncryptionConfigurationPanel;
import com.trinity.ea.design.common.panel.DataContentPanel;
import javax.swing.JTextArea;
import javax.swing.JPanel;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;

/**
 *
 * @author  aaronsc Trinity Software
 * Copyright Â©2003-2005 Trinity Software. All rights reserved.
 */
public class AutoUpdateEncryptionPanel extends EAPanel {
    
    /** Creates new form AutoUpdateEncryptionPanel */
    public AutoUpdateEncryptionPanel() {
        initComponents();
	  setProjectData();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        AutoUpdateEncryptionDescription = new javax.swing.JPanel();
	  AutoUpdateEncryptionContentPanelSouthFillerPanel = new javax.swing.JPanel();
	  NorthCenterContentPanel = new javax.swing.JPanel();
        taOptionsDescription = new javax.swing.JTextArea();
        WestFiller = new javax.swing.JPanel();
        EastFiller = new javax.swing.JPanel();
        NorthFiller = new javax.swing.JPanel();
        AutoUpdateEncryptionContentPanel = new javax.swing.JPanel();
    	  dcp = new DataContentPanel("Encryption Settings");
    	  dcp2 = new DataContentPanel("Java Code Signing Validation Settings (required to enable \"Secure mode\")");
    	  ecp = new EncryptionConfigurationPanel();
	  ecp2 = new X500EncryptionConfigurationPanel();
        setLayout(new java.awt.BorderLayout());

        setBackground(new java.awt.Color(140, 160, 210));
        setMinimumSize(new java.awt.Dimension(570, 343));
        setPreferredSize(new java.awt.Dimension(570, 343));
        AutoUpdateEncryptionDescription.setLayout(new java.awt.BorderLayout());

        AutoUpdateEncryptionDescription.setBackground(new java.awt.Color(140, 160, 210));
        AutoUpdateEncryptionDescription.setMaximumSize(new java.awt.Dimension(2147483647, 25));
        AutoUpdateEncryptionDescription.setPreferredSize(new java.awt.Dimension(448, 25));
        taOptionsDescription.setBackground(new java.awt.Color(140, 160, 210));
        taOptionsDescription.setFont(new java.awt.Font("Arial", 0, 12));
        taOptionsDescription.setLineWrap(true);
        taOptionsDescription.setText("The Automatic Software Update Vendor Product Encryption information is defined below.");
        taOptionsDescription.setWrapStyleWord(true);
        taOptionsDescription.setMaximumSize(new java.awt.Dimension(2147483647, 15));
        taOptionsDescription.setMinimumSize(new java.awt.Dimension(100, 15));
        taOptionsDescription.setPreferredSize(new java.awt.Dimension(100, 15));
        AutoUpdateEncryptionDescription.add(taOptionsDescription, java.awt.BorderLayout.CENTER);

        WestFiller.setBackground(new java.awt.Color(140, 160, 210));
        WestFiller.setMaximumSize(new java.awt.Dimension(10, 10));
        AutoUpdateEncryptionDescription.add(WestFiller, java.awt.BorderLayout.WEST);

        EastFiller.setBackground(new java.awt.Color(140, 160, 210));
        EastFiller.setMaximumSize(new java.awt.Dimension(10, 10));
        AutoUpdateEncryptionDescription.add(EastFiller, java.awt.BorderLayout.EAST);

        NorthFiller.setBackground(new java.awt.Color(140, 160, 210));
        NorthFiller.setMaximumSize(new java.awt.Dimension(10, 10));
        AutoUpdateEncryptionDescription.add(NorthFiller, java.awt.BorderLayout.NORTH);

        add(AutoUpdateEncryptionDescription, java.awt.BorderLayout.NORTH);

        AutoUpdateEncryptionContentPanel.setLayout(new java.awt.BorderLayout());

        AutoUpdateEncryptionContentPanel.setBackground(new java.awt.Color(140, 160, 210));
        AutoUpdateEncryptionContentPanel.setMaximumSize(new java.awt.Dimension(0, 1000));
        AutoUpdateEncryptionContentPanel.setMinimumSize(new java.awt.Dimension(0, 600));
        AutoUpdateEncryptionContentPanel.setPreferredSize(new java.awt.Dimension(0, 775));

	  NorthCenterContentPanel.setLayout(new java.awt.BorderLayout());
	  NorthCenterContentPanel.setBackground(new java.awt.Color(140, 160, 210));

        dcp.setMaximumSize(new java.awt.Dimension(0, 118));
        dcp.setMinimumSize(new java.awt.Dimension(0, 118));
        dcp.setPreferredSize(new java.awt.Dimension(0, 118));
        dcp2.setMaximumSize(new java.awt.Dimension(0, 152));
        dcp2.setMinimumSize(new java.awt.Dimension(0, 152));
        dcp2.setPreferredSize(new java.awt.Dimension(0, 152));
	  dcp.setContentPanel(ecp);
	  dcp2.setContentPanel(ecp2);
	  AutoUpdateEncryptionContentPanel.add(dcp, java.awt.BorderLayout.NORTH);
        AutoUpdateEncryptionContentPanelSouthFillerPanel.setBackground(new java.awt.Color(140, 160, 210));

	  AutoUpdateEncryptionContentPanel.add(NorthCenterContentPanel, java.awt.BorderLayout.CENTER);	  
//AutoUpdateEncryptionContentPanel.add(AutoUpdateEncryptionContentPanelSouthFillerPanel, java.awt.BorderLayout.CENTER);

	  NorthCenterContentPanel.add(dcp2, java.awt.BorderLayout.NORTH);
        AutoUpdateEncryptionContentPanelSouthFillerPanel.setBackground(new java.awt.Color(140, 160, 210));

	  NorthCenterContentPanel.add(AutoUpdateEncryptionContentPanelSouthFillerPanel, java.awt.BorderLayout.CENTER);	  
//AutoUpdateEncryptionContentPanel.add(AutoUpdateEncryptionContentPanelSouthFillerPanel, java.awt.BorderLayout.CENTER);
	
        add(AutoUpdateEncryptionContentPanel, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents

     public synchronized void getDataUpdate()
    {
	  try
	  {
		// Auto Update Support Password Seed and Password Count Functionality variables
  	      dcp.getDataUpdate();
		// Jar Signing X500 Principal
  	      dcp2.getDataUpdate();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }

    public synchronized void setProjectData()
    {
        try
        {
		// Auto Update Support Password Seed and Password Count Functionality variables 
		dcp.setProjectData();
		// Jar Signing X500 Principal
		dcp2.setProjectData();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AutoUpdateEncryptionContentPanel;
    private javax.swing.JPanel NorthCenterContentPanel;
    private javax.swing.JPanel AutoUpdateEncryptionDescription;
    private javax.swing.JPanel EastFiller;
    private javax.swing.JPanel NorthFiller;
    private javax.swing.JPanel WestFiller;
    private javax.swing.JTextArea taOptionsDescription;
    private DataContentPanel dcp;
    private EncryptionConfigurationPanel ecp;
    private DataContentPanel dcp2;
    private X500EncryptionConfigurationPanel ecp2;
    private javax.swing.JPanel AutoUpdateEncryptionContentPanelSouthFillerPanel;
    // End of variables declaration//GEN-END:variables
    
}
