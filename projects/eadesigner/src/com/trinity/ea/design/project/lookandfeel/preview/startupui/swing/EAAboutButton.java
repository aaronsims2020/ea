/*
 * EAAboutButton.java
 *
 * Created on June 2, 2004, 11:19 PM
 */

package com.trinity.ea.design.project.lookandfeel.preview.startupui.swing;
import com.trinity.ea.design.common.file.ProjectManager;
import javax.swing.ImageIcon;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Cursor;
import java.awt.Color;
import java.awt.Image;
import javax.swing.JLabel;
import javax.swing.JPanel;
import java.awt.ComponentOrientation;
import com.trinity.ea.util.BrowserLauncher;
import java.net.URL;
import java.net.MalformedURLException;

/**
 *
 * @author  aaronsc Trinity Software
 * Copyright Â©2003-2004 Trinity Software. All rights reserved.
 */
public class EAAboutButton extends javax.swing.JPanel {
    
    /** Creates new form EAAboutButton */
    public EAAboutButton() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        ProgressBarImage = new javax.swing.JLabel();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));
if(ProjectManager.get("progressPanelImgPath")!=null)
{
	if(ProjectManager.get("progressPanelImgPath").equalsIgnoreCase("")==false)
	{ 
		try
		{
			theImageRef = new javax.swing.ImageIcon(new URL(ProjectManager.get("progressPanelImgPath")));
//
			if(ProjectManager.get("progressPanelImgStretchToFitEnabled")!=null)
			{ 
				if(ProjectManager.get("progressPanelImgStretchToFitEnabled").equalsIgnoreCase("true")==true)
				{
					ProgressBarImage.setIcon(new ImageIcon(theImageRef.getImage().getScaledInstance(44, -1, Image.SCALE_DEFAULT)));
				}
				else
				{
					ProgressBarImage.setIcon(theImageRef);
				}		 
			}
			else
			{
				ProgressBarImage.setIcon(theImageRef);
			}

//
      	  	ProgressBarImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		}
		catch(Exception e)
		{
			e.printStackTrace();
     		      ProgressBarImage.setText(ProjectManager.get("imageMissingText"));
      	  	ProgressBarImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		}
      	ProgressBarImage.setText("");
	}
	else
	{
            ProgressBarImage.setText(ProjectManager.get("imageMissingText"));
        	ProgressBarImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
	}
}
else
{
            ProgressBarImage.setText(ProjectManager.get("imageMissingText"));
        	ProgressBarImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
}
        setBackground(new java.awt.Color(0, 0, 0));
        setMaximumSize(new java.awt.Dimension(44, 44));
        setMinimumSize(new java.awt.Dimension(44, 44));
        setPreferredSize(new java.awt.Dimension(44, 44));
        ProgressBarImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProgressBarImageMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ProgressBarImageMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ProgressBarImageMouseExited(evt);
            }
        });

        add(ProgressBarImage);

    }//GEN-END:initComponents

    private void ProgressBarImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProgressBarImageMouseClicked
        try
        {
            if(intActionType == 0)
            {
                BrowserLauncher.openURL(actionPackage);
            }
            else if(intActionType == 1)
            {
                try
                {
                    Class.forName(actionPackage).newInstance();
                }
                catch(InstantiationException e)
                {
                    e.printStackTrace();
                }   
                catch(IllegalAccessException e)
                {
                    e.printStackTrace();
                }                      
                catch(ClassNotFoundException e)
                {
                    e.printStackTrace();
                }                    
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_ProgressBarImageMouseClicked

    private void ProgressBarImageMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProgressBarImageMouseExited
    }//GEN-LAST:event_ProgressBarImageMouseExited

    private void ProgressBarImageMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProgressBarImageMouseEntered
    }//GEN-LAST:event_ProgressBarImageMouseEntered

  
    private int intActionType = -1;
    private String actionPackage = null;
    public void setActionType(int actionType)
    {
        intActionType = actionType;
        try
        {
            if(intActionType!=-1)
            {
                ProgressBarImage.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    
    public void setAction(String actionPackageName)
    {
        actionPackage = actionPackageName;
    }    
    
    private ImageIcon theImageRef = null;
    private int getImageHeight()
    {
        return theImageRef.getIconHeight();
    }

    private int getImageWidth()
    {
        return theImageRef.getIconWidth();
    }    
    
      
    public void setOverideDefaultPanelSize(int width, int height)
    {
        setMaximumSize(new java.awt.Dimension(width, height));
        setMinimumSize(new java.awt.Dimension(width, height));
        setPreferredSize(new java.awt.Dimension(width, height)); 
        ProgressBarImage.setMaximumSize(new java.awt.Dimension(width, height));
        ProgressBarImage.setMinimumSize(new java.awt.Dimension(width, height));
        ProgressBarImage.setPreferredSize(new java.awt.Dimension(width, height));       
    }
    
    public void setBackgroundColor(Color BGColor)
    {
         setBackground(BGColor);
         ProgressBarImage.setBackground(BGColor);       
    } 
    
    public void setComponentOrientation(ComponentOrientation theOrientation)
    {
        ProgressBarImage.setComponentOrientation(theOrientation);
    }    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ProgressBarImage;
    // End of variables declaration//GEN-END:variables
    
}
