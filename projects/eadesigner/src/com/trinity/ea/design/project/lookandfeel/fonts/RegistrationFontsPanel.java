/*
 * RegistrationFontsPanel.java
 *
 * Created on June 13, 2004, 3:24 PM
 */

package com.trinity.ea.design.project.lookandfeel.fonts;
import com.trinity.ea.design.common.file.ProjectManager;
import com.trinity.ea.design.common.panel.EAPanel;
import com.trinity.ea.design.EADesigner;
import com.trinity.ea.design.common.fontchooser.FontChooser;
import com.trinity.ea.design.registration.actions.EnterRegistrationCodeAction;
import com.trinity.ea.design.registration.actions.RegistrationFailedUIAction;
import com.trinity.ea.design.registration.actions.RegistrationSuccessUIAction;
import java.util.ArrayList;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.net.MalformedURLException;
import java.awt.*;
import javax.swing.*; 

/**
 *
 * @author  aaronsc Trinity Software
 * Copyright Â©2003-2004 Trinity Software. All rights reserved.
 */
public class RegistrationFontsPanel extends EAPanel {

    /** Creates new form ImagesPanel */
    public RegistrationFontsPanel() 
    {
        initComponents();
      
        setProjectData();
    }

    public synchronized void getDataUpdate()
    {
	try
        {
            //ProjectManager.saveTempNow(); 
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
 
    public synchronized void setProjectData()
    {
        try
        {
            if(ProjectManager.get("registrationCodeLabelFont")!=null)
            {
                if(ProjectManager.get("registrationCodeLabelFont").equalsIgnoreCase("")==false)
                {
                    Object[] tmpArray = getStringArraysFromString(ProjectManager.get("registrationCodeLabelFont"));
                    demoButtonBarFont.setFont(new Font((String)tmpArray[0],new Integer((String)tmpArray[1]).intValue(), new Integer((String)tmpArray[2]).intValue()));
                    demoButtonBarFont.setText((String)tmpArray[0] + ", " + (String)tmpArray[1] + ", " + (String)tmpArray[2]);
                    useDefaultButtonBarTextColor.setSelected(false);
                }
                else
                {
                    useDefaultButtonBarTextColor.setSelected(true);
                }
            }
            else
            {
                  useDefaultButtonBarTextColor.setSelected(true);           
            }
            
            
            if(ProjectManager.get("registrationDescriptionFont")!=null)
            {
                if(ProjectManager.get("registrationDescriptionFont").equalsIgnoreCase("")==false)
                {
                    Object[] tmpArray = getStringArraysFromString(ProjectManager.get("registrationDescriptionFont"));
                    demoProgressPanelTextFont.setFont(new Font((String)tmpArray[0],new Integer((String)tmpArray[1]).intValue(), new Integer((String)tmpArray[2]).intValue()));
                    demoProgressPanelTextFont.setText((String)tmpArray[0] + ", " + (String)tmpArray[1] + ", " + (String)tmpArray[2]);
                    useDefaultButtonBarBackgroundColor.setSelected(false);
                }
                else
                {
                    useDefaultButtonBarBackgroundColor.setSelected(true);
                }
            }
            else
            {
                  useDefaultButtonBarBackgroundColor.setSelected(true);           
            }            
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }    

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        ProjectLookAndFeelImages = new javax.swing.JPanel();
        UIChoicesBottomPanel7 = new javax.swing.JPanel();
        UIChoicesBottomPanel5 = new javax.swing.JPanel();
        lFiller43 = new javax.swing.JLabel();
        useDefaultButtonBarTextColor = new javax.swing.JCheckBox();
        buttonBarTextColorChooserButton = new javax.swing.JButton();
        lFiller44 = new javax.swing.JLabel();
        lFiller57 = new javax.swing.JLabel();
        demoButtonBarFont = new javax.swing.JLabel();
        ProjectLookAndFeelImages1 = new javax.swing.JPanel();
        UIChoicesBottomPanel8 = new javax.swing.JPanel();
        UIChoicesBottomPanel6 = new javax.swing.JPanel();
        lFiller46 = new javax.swing.JLabel();
        useDefaultButtonBarBackgroundColor = new javax.swing.JCheckBox();
        ButtonBarBackgroundColorChooserButton = new javax.swing.JButton();
        lFiller58 = new javax.swing.JLabel();
        lFiller50 = new javax.swing.JLabel();
        demoProgressPanelTextFont = new javax.swing.JLabel();
        ProjectLookAndFeelImages4 = new javax.swing.JPanel();
        ProjectLocationsCenterPanel5 = new javax.swing.JPanel();
        lFiller49 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        rbPaymentPreview = new javax.swing.JRadioButton();
        rbPaymentSuccessPreview = new javax.swing.JRadioButton();
        rbPaymentFailurePreview = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        PreviewButton = new javax.swing.JButton();
        lFiller51 = new javax.swing.JLabel();
        UIChoicesBottomPanel9 = new javax.swing.JPanel();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        setBackground(new java.awt.Color(140, 160, 210));
        ProjectLookAndFeelImages.setLayout(new javax.swing.BoxLayout(ProjectLookAndFeelImages, javax.swing.BoxLayout.Y_AXIS));

        ProjectLookAndFeelImages.setBackground(new java.awt.Color(140, 160, 210));
        ProjectLookAndFeelImages.setBorder(new javax.swing.border.TitledBorder(new javax.swing.border.EtchedBorder(new java.awt.Color(198, 226, 253), new java.awt.Color(96, 110, 145)), "Registration Code Label Font", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12)));
        ProjectLookAndFeelImages.setMaximumSize(new java.awt.Dimension(32767, 60));
        ProjectLookAndFeelImages.setMinimumSize(new java.awt.Dimension(10, 60));
        ProjectLookAndFeelImages.setPreferredSize(new java.awt.Dimension(10, 60));
        UIChoicesBottomPanel7.setLayout(new javax.swing.BoxLayout(UIChoicesBottomPanel7, javax.swing.BoxLayout.X_AXIS));

        UIChoicesBottomPanel7.setBackground(new java.awt.Color(140, 160, 210));
        UIChoicesBottomPanel7.setMaximumSize(new java.awt.Dimension(32767, 4));
        UIChoicesBottomPanel7.setMinimumSize(new java.awt.Dimension(5, 4));
        UIChoicesBottomPanel7.setPreferredSize(new java.awt.Dimension(200, 4));
        ProjectLookAndFeelImages.add(UIChoicesBottomPanel7);

        UIChoicesBottomPanel5.setLayout(new javax.swing.BoxLayout(UIChoicesBottomPanel5, javax.swing.BoxLayout.X_AXIS));

        UIChoicesBottomPanel5.setBackground(new java.awt.Color(140, 160, 210));
        UIChoicesBottomPanel5.setMaximumSize(new java.awt.Dimension(32767, 20));
        UIChoicesBottomPanel5.setMinimumSize(new java.awt.Dimension(5, 20));
        UIChoicesBottomPanel5.setPreferredSize(new java.awt.Dimension(200, 20));
        lFiller43.setBackground(new java.awt.Color(140, 160, 210));
        lFiller43.setText("   ");
        lFiller43.setMaximumSize(new java.awt.Dimension(10, 15));
        lFiller43.setMinimumSize(new java.awt.Dimension(10, 16));
        lFiller43.setPreferredSize(new java.awt.Dimension(10, 16));
        UIChoicesBottomPanel5.add(lFiller43);

        useDefaultButtonBarTextColor.setBackground(new java.awt.Color(140, 160, 210));
        useDefaultButtonBarTextColor.setFont(new java.awt.Font("Arial", 0, 12));
        useDefaultButtonBarTextColor.setSelected(true);
        useDefaultButtonBarTextColor.setText("Use default registration code label font");
        useDefaultButtonBarTextColor.setMaximumSize(new java.awt.Dimension(250, 23));
        useDefaultButtonBarTextColor.setMinimumSize(new java.awt.Dimension(250, 23));
        useDefaultButtonBarTextColor.setPreferredSize(new java.awt.Dimension(250, 23));
        useDefaultButtonBarTextColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useDefaultButtonBarTextColorActionPerformed(evt);
            }
        });

        UIChoicesBottomPanel5.add(useDefaultButtonBarTextColor);

        buttonBarTextColorChooserButton.setBackground(new java.awt.Color(140, 160, 210));
        buttonBarTextColorChooserButton.setText("Set Font...");
        buttonBarTextColorChooserButton.setMaximumSize(new java.awt.Dimension(90, 25));
        buttonBarTextColorChooserButton.setMinimumSize(new java.awt.Dimension(90, 25));
        buttonBarTextColorChooserButton.setPreferredSize(new java.awt.Dimension(90, 25));
        buttonBarTextColorChooserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBarTextColorChooserButtonActionPerformed(evt);
            }
        });

        UIChoicesBottomPanel5.add(buttonBarTextColorChooserButton);

        lFiller44.setBackground(new java.awt.Color(140, 160, 210));
        lFiller44.setText("   ");
        lFiller44.setMaximumSize(new java.awt.Dimension(10, 15));
        lFiller44.setMinimumSize(new java.awt.Dimension(10, 16));
        lFiller44.setPreferredSize(new java.awt.Dimension(10, 16));
        UIChoicesBottomPanel5.add(lFiller44);

        lFiller57.setBackground(new java.awt.Color(140, 160, 210));
        lFiller57.setText("   ");
        lFiller57.setMaximumSize(new java.awt.Dimension(10, 15));
        lFiller57.setMinimumSize(new java.awt.Dimension(10, 15));
        lFiller57.setPreferredSize(new java.awt.Dimension(10, 15));
        UIChoicesBottomPanel5.add(lFiller57);

        demoButtonBarFont.setBackground(new java.awt.Color(140, 160, 210));
        demoButtonBarFont.setText("   ");
        demoButtonBarFont.setMaximumSize(new java.awt.Dimension(32767, 15));
        demoButtonBarFont.setMinimumSize(new java.awt.Dimension(10, 15));
        demoButtonBarFont.setPreferredSize(new java.awt.Dimension(10, 15));
        UIChoicesBottomPanel5.add(demoButtonBarFont);

        ProjectLookAndFeelImages.add(UIChoicesBottomPanel5);

        add(ProjectLookAndFeelImages);

        ProjectLookAndFeelImages1.setLayout(new javax.swing.BoxLayout(ProjectLookAndFeelImages1, javax.swing.BoxLayout.Y_AXIS));

        ProjectLookAndFeelImages1.setBackground(new java.awt.Color(140, 160, 210));
        ProjectLookAndFeelImages1.setBorder(new javax.swing.border.TitledBorder(new javax.swing.border.EtchedBorder(new java.awt.Color(198, 226, 253), new java.awt.Color(96, 110, 145)), "Description Font", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12)));
        ProjectLookAndFeelImages1.setMaximumSize(new java.awt.Dimension(32767, 60));
        ProjectLookAndFeelImages1.setMinimumSize(new java.awt.Dimension(10, 60));
        ProjectLookAndFeelImages1.setPreferredSize(new java.awt.Dimension(10, 60));
        UIChoicesBottomPanel8.setLayout(new javax.swing.BoxLayout(UIChoicesBottomPanel8, javax.swing.BoxLayout.X_AXIS));

        UIChoicesBottomPanel8.setBackground(new java.awt.Color(140, 160, 210));
        UIChoicesBottomPanel8.setMaximumSize(new java.awt.Dimension(32767, 4));
        UIChoicesBottomPanel8.setMinimumSize(new java.awt.Dimension(5, 4));
        UIChoicesBottomPanel8.setPreferredSize(new java.awt.Dimension(200, 4));
        ProjectLookAndFeelImages1.add(UIChoicesBottomPanel8);

        UIChoicesBottomPanel6.setLayout(new javax.swing.BoxLayout(UIChoicesBottomPanel6, javax.swing.BoxLayout.X_AXIS));

        UIChoicesBottomPanel6.setBackground(new java.awt.Color(140, 160, 210));
        UIChoicesBottomPanel6.setMaximumSize(new java.awt.Dimension(32767, 20));
        UIChoicesBottomPanel6.setMinimumSize(new java.awt.Dimension(5, 20));
        UIChoicesBottomPanel6.setPreferredSize(new java.awt.Dimension(200, 20));
        lFiller46.setBackground(new java.awt.Color(140, 160, 210));
        lFiller46.setText("   ");
        lFiller46.setMaximumSize(new java.awt.Dimension(10, 15));
        lFiller46.setMinimumSize(new java.awt.Dimension(10, 16));
        lFiller46.setPreferredSize(new java.awt.Dimension(10, 16));
        UIChoicesBottomPanel6.add(lFiller46);

        useDefaultButtonBarBackgroundColor.setBackground(new java.awt.Color(140, 160, 210));
        useDefaultButtonBarBackgroundColor.setFont(new java.awt.Font("Arial", 0, 12));
        useDefaultButtonBarBackgroundColor.setSelected(true);
        useDefaultButtonBarBackgroundColor.setText("Use default description font");
        useDefaultButtonBarBackgroundColor.setMaximumSize(new java.awt.Dimension(250, 23));
        useDefaultButtonBarBackgroundColor.setMinimumSize(new java.awt.Dimension(250, 23));
        useDefaultButtonBarBackgroundColor.setPreferredSize(new java.awt.Dimension(250, 23));
        useDefaultButtonBarBackgroundColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useDefaultButtonBarBackgroundColorActionPerformed(evt);
            }
        });

        UIChoicesBottomPanel6.add(useDefaultButtonBarBackgroundColor);

        ButtonBarBackgroundColorChooserButton.setBackground(new java.awt.Color(140, 160, 210));
        ButtonBarBackgroundColorChooserButton.setText("Set Font...");
        ButtonBarBackgroundColorChooserButton.setMaximumSize(new java.awt.Dimension(90, 25));
        ButtonBarBackgroundColorChooserButton.setMinimumSize(new java.awt.Dimension(90, 25));
        ButtonBarBackgroundColorChooserButton.setPreferredSize(new java.awt.Dimension(90, 25));
        ButtonBarBackgroundColorChooserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonBarBackgroundColorChooserButtonActionPerformed(evt);
            }
        });

        UIChoicesBottomPanel6.add(ButtonBarBackgroundColorChooserButton);

        lFiller58.setBackground(new java.awt.Color(140, 160, 210));
        lFiller58.setText("   ");
        lFiller58.setMaximumSize(new java.awt.Dimension(10, 15));
        lFiller58.setMinimumSize(new java.awt.Dimension(10, 15));
        lFiller58.setPreferredSize(new java.awt.Dimension(10, 15));
        UIChoicesBottomPanel6.add(lFiller58);

        lFiller50.setBackground(new java.awt.Color(140, 160, 210));
        lFiller50.setText("   ");
        lFiller50.setMaximumSize(new java.awt.Dimension(10, 15));
        lFiller50.setMinimumSize(new java.awt.Dimension(10, 16));
        lFiller50.setPreferredSize(new java.awt.Dimension(10, 16));
        UIChoicesBottomPanel6.add(lFiller50);

        demoProgressPanelTextFont.setBackground(new java.awt.Color(140, 160, 210));
        demoProgressPanelTextFont.setText("   ");
        demoProgressPanelTextFont.setMaximumSize(new java.awt.Dimension(32767, 15));
        demoProgressPanelTextFont.setMinimumSize(new java.awt.Dimension(10, 15));
        demoProgressPanelTextFont.setPreferredSize(new java.awt.Dimension(10, 15));
        UIChoicesBottomPanel6.add(demoProgressPanelTextFont);

        ProjectLookAndFeelImages1.add(UIChoicesBottomPanel6);

        add(ProjectLookAndFeelImages1);

        ProjectLookAndFeelImages4.setLayout(new javax.swing.BoxLayout(ProjectLookAndFeelImages4, javax.swing.BoxLayout.Y_AXIS));

        ProjectLookAndFeelImages4.setBackground(new java.awt.Color(140, 160, 210));
        ProjectLookAndFeelImages4.setMaximumSize(new java.awt.Dimension(32767, 90));
        ProjectLookAndFeelImages4.setMinimumSize(new java.awt.Dimension(10, 90));
        ProjectLookAndFeelImages4.setPreferredSize(new java.awt.Dimension(10, 90));
        ProjectLocationsCenterPanel5.setLayout(new javax.swing.BoxLayout(ProjectLocationsCenterPanel5, javax.swing.BoxLayout.X_AXIS));

        ProjectLocationsCenterPanel5.setBackground(new java.awt.Color(140, 160, 210));
        ProjectLocationsCenterPanel5.setMaximumSize(new java.awt.Dimension(2147483647, 69));
        ProjectLocationsCenterPanel5.setMinimumSize(new java.awt.Dimension(600, 69));
        ProjectLocationsCenterPanel5.setPreferredSize(new java.awt.Dimension(800, 69));
        lFiller49.setBackground(new java.awt.Color(140, 160, 210));
        lFiller49.setText("   ");
        lFiller49.setMaximumSize(new java.awt.Dimension(32767, 15));
        lFiller49.setMinimumSize(new java.awt.Dimension(15, 16));
        lFiller49.setPreferredSize(new java.awt.Dimension(15, 16));
        ProjectLocationsCenterPanel5.add(lFiller49);

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.X_AXIS));

        jPanel1.setBackground(new java.awt.Color(140, 160, 210));
        jPanel1.setMaximumSize(new java.awt.Dimension(255, 69));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.Y_AXIS));

        jPanel2.setBackground(new java.awt.Color(140, 160, 210));
        rbPaymentPreview.setBackground(new java.awt.Color(140, 160, 210));
        rbPaymentPreview.setFont(new java.awt.Font("Arial", 0, 12));
        rbPaymentPreview.setSelected(true);
        rbPaymentPreview.setText("Registration Form");
        rbPaymentPreview.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        rbPaymentPreview.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        rbPaymentPreview.setMaximumSize(new java.awt.Dimension(188, 23));
        rbPaymentPreview.setMinimumSize(new java.awt.Dimension(188, 23));
        rbPaymentPreview.setPreferredSize(new java.awt.Dimension(188, 23));
        rbPaymentPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPaymentPreviewActionPerformed(evt);
            }
        });

        jPanel2.add(rbPaymentPreview);

        rbPaymentSuccessPreview.setBackground(new java.awt.Color(140, 160, 210));
        rbPaymentSuccessPreview.setFont(new java.awt.Font("Arial", 0, 12));
        rbPaymentSuccessPreview.setText("Registration Success Form");
        rbPaymentSuccessPreview.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        rbPaymentSuccessPreview.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        rbPaymentSuccessPreview.setMaximumSize(new java.awt.Dimension(188, 23));
        rbPaymentSuccessPreview.setMinimumSize(new java.awt.Dimension(188, 23));
        rbPaymentSuccessPreview.setPreferredSize(new java.awt.Dimension(188, 23));
        rbPaymentSuccessPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPaymentSuccessPreviewActionPerformed(evt);
            }
        });

        jPanel2.add(rbPaymentSuccessPreview);

        rbPaymentFailurePreview.setBackground(new java.awt.Color(140, 160, 210));
        rbPaymentFailurePreview.setFont(new java.awt.Font("Arial", 0, 12));
        rbPaymentFailurePreview.setText("Registration Failure Form");
        rbPaymentFailurePreview.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        rbPaymentFailurePreview.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        rbPaymentFailurePreview.setMaximumSize(new java.awt.Dimension(188, 23));
        rbPaymentFailurePreview.setMinimumSize(new java.awt.Dimension(188, 23));
        rbPaymentFailurePreview.setPreferredSize(new java.awt.Dimension(188, 23));
        rbPaymentFailurePreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPaymentFailurePreviewActionPerformed(evt);
            }
        });

        jPanel2.add(rbPaymentFailurePreview);

        jPanel1.add(jPanel2);

        jPanel4.setBackground(new java.awt.Color(140, 160, 210));
        jPanel1.add(jPanel4);

        jPanel3.setBackground(new java.awt.Color(140, 160, 210));
        jPanel3.setMaximumSize(new java.awt.Dimension(77, 69));
        jPanel3.setMinimumSize(new java.awt.Dimension(77, 69));
        jPanel3.setPreferredSize(new java.awt.Dimension(77, 69));
        PreviewButton.setFont(new java.awt.Font("Arial", 0, 12));
        PreviewButton.setLabel("Preview");
        PreviewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreviewButtonActionPerformed(evt);
            }
        });

        jPanel3.add(PreviewButton);

        jPanel1.add(jPanel3);

        ProjectLocationsCenterPanel5.add(jPanel1);

        lFiller51.setBackground(new java.awt.Color(140, 160, 210));
        lFiller51.setText("   ");
        lFiller51.setMaximumSize(new java.awt.Dimension(15, 15));
        lFiller51.setMinimumSize(new java.awt.Dimension(15, 16));
        lFiller51.setPreferredSize(new java.awt.Dimension(15, 16));
        ProjectLocationsCenterPanel5.add(lFiller51);

        ProjectLookAndFeelImages4.add(ProjectLocationsCenterPanel5);

        UIChoicesBottomPanel9.setBackground(new java.awt.Color(140, 160, 210));
        UIChoicesBottomPanel9.setMinimumSize(new java.awt.Dimension(5, 5));
        UIChoicesBottomPanel9.setPreferredSize(new java.awt.Dimension(5, 5));
        ProjectLookAndFeelImages4.add(UIChoicesBottomPanel9);

        add(ProjectLookAndFeelImages4);

    }//GEN-END:initComponents

    private void rbPaymentFailurePreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPaymentFailurePreviewActionPerformed
        if(rbPaymentFailurePreview.isSelected()==true)
        {
           rbPaymentPreview.setSelected(false);
           rbPaymentFailurePreview.setSelected(true);
           rbPaymentSuccessPreview.setSelected(false);
        } 
    }//GEN-LAST:event_rbPaymentFailurePreviewActionPerformed

    private void rbPaymentSuccessPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPaymentSuccessPreviewActionPerformed
        if(rbPaymentSuccessPreview.isSelected()==true)
        {
           rbPaymentPreview.setSelected(false);
           rbPaymentFailurePreview.setSelected(false);
           rbPaymentSuccessPreview.setSelected(true);
        } 
    }//GEN-LAST:event_rbPaymentSuccessPreviewActionPerformed

    private void rbPaymentPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPaymentPreviewActionPerformed
        if(rbPaymentPreview.isSelected()==true)
        {
           rbPaymentPreview.setSelected(true);
           rbPaymentFailurePreview.setSelected(false);
           rbPaymentSuccessPreview.setSelected(false);
        } 
    }//GEN-LAST:event_rbPaymentPreviewActionPerformed

    private void ButtonBarBackgroundColorChooserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonBarBackgroundColorChooserButtonActionPerformed
         try
        {
 if(ProjectManager.get("registrationDescriptionFont")!=null)
        {
            if(ProjectManager.get("registrationDescriptionFont").equalsIgnoreCase("")==false)
            {
                Object[] tmpArray = getStringArraysFromString(ProjectManager.get("registrationDescriptionFont"));
                Font retFont = FontChooser.showDialog(getParentComp(),"Font Chooser", new Font((String)tmpArray[0],new Integer((String)tmpArray[1]).intValue(), new Integer((String)tmpArray[2]).intValue()));
                if(retFont!=null)
                {
                    ProjectManager.putTempNoFileWrite("registrationDescriptionFont",retFont.getName() + "," + String.valueOf(retFont.getStyle()) + "," + String.valueOf(retFont.getSize()));
                }
                tmpArray = getStringArraysFromString(ProjectManager.get("registrationDescriptionFont"));
                demoProgressPanelTextFont.setFont(new Font((String)tmpArray[0],new Integer((String)tmpArray[1]).intValue(), new Integer((String)tmpArray[2]).intValue()));
                demoProgressPanelTextFont.setText((String)tmpArray[0] + ", " + (String)tmpArray[1] + ", " + (String)tmpArray[2]);
            }
            else
            {
                Font retFont = FontChooser.showDialog(getParentComp(),"Font Chooser", new Font("Arial", 0, 12));
                if(retFont!=null)
                {
                    ProjectManager.putTempNoFileWrite("registrationDescriptionFont",retFont.getName() + "," + String.valueOf(retFont.getStyle()) + "," + String.valueOf(retFont.getSize()));
                    Object[] tmpArray = getStringArraysFromString(ProjectManager.get("registrationDescriptionFont"));
                    demoProgressPanelTextFont.setFont(new Font((String)tmpArray[0],new Integer((String)tmpArray[1]).intValue(), new Integer((String)tmpArray[2]).intValue()));
                    demoProgressPanelTextFont.setText((String)tmpArray[0] + ", " + (String)tmpArray[1] + ", " + (String)tmpArray[2]);
                }
            }
        }
        else
        {
                Font retFont = FontChooser.showDialog(getParentComp(),"Font Chooser", new Font("Arial", 0, 12));
                if(retFont!=null)
                {
                    ProjectManager.putTempNoFileWrite("registrationDescriptionFont",retFont.getName() + "," + String.valueOf(retFont.getStyle()) + "," + String.valueOf(retFont.getSize()));
                    Object[] tmpArray = getStringArraysFromString(ProjectManager.get("registrationDescriptionFont"));
                    demoProgressPanelTextFont.setFont(new Font((String)tmpArray[0],new Integer((String)tmpArray[1]).intValue(), new Integer((String)tmpArray[2]).intValue()));
                    demoProgressPanelTextFont.setText((String)tmpArray[0] + ", " + (String)tmpArray[1] + ", " + (String)tmpArray[2]);
                }
        }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_ButtonBarBackgroundColorChooserButtonActionPerformed

    private void useDefaultButtonBarBackgroundColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useDefaultButtonBarBackgroundColorActionPerformed
try
{
    if(useDefaultButtonBarBackgroundColor.isSelected() == true)
    {
        demoProgressPanelTextFont.setVisible(false);
        ButtonBarBackgroundColorChooserButton.setVisible(false);
    }
    else
    {
        demoProgressPanelTextFont.setVisible(true);
        ButtonBarBackgroundColorChooserButton.setVisible(true);
    }
}
catch(Exception e)
{
    e.printStackTrace();
}
    }//GEN-LAST:event_useDefaultButtonBarBackgroundColorActionPerformed

    private void progressPanelImgStretchToFitEnabledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_progressPanelImgStretchToFitEnabledActionPerformed

    }//GEN-LAST:event_progressPanelImgStretchToFitEnabledActionPerformed

    private void btnBarImageStretchToFitEnabledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBarImageStretchToFitEnabledActionPerformed
//TODO Code goes here.
    }//GEN-LAST:event_btnBarImageStretchToFitEnabledActionPerformed

    private void btnBarImageAlignToTopEnabledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBarImageAlignToTopEnabledActionPerformed
//TODO Code goes here.
    }//GEN-LAST:event_btnBarImageAlignToTopEnabledActionPerformed

    private void PreviewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreviewButtonActionPerformed
        try
        {
            if(rbPaymentPreview.isSelected()==true)
            {
			EAPanel thePanel = (EAPanel)getParentComponent();
                ((EAPanel)thePanel.getParentComponent()).getDataUpdate(); 
                new EnterRegistrationCodeAction();	
            }
            else if(rbPaymentFailurePreview.isSelected()==true)
            {
			EAPanel thePanel = (EAPanel)getParentComponent();
                ((EAPanel)thePanel.getParentComponent()).getDataUpdate();            
                new RegistrationFailedUIAction();
            }
            else if(rbPaymentSuccessPreview.isSelected()==true)
            {
			EAPanel thePanel = (EAPanel)getParentComponent();
                ((EAPanel)thePanel.getParentComponent()).getDataUpdate(); 
                new RegistrationSuccessUIAction();            
            } 
        }
        catch(Exception e)
        {
                e.printStackTrace();
        }
    }//GEN-LAST:event_PreviewButtonActionPerformed
 
    private void useDefaultButtonBarTextColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useDefaultButtonBarTextColorActionPerformed
try
{
    if(useDefaultButtonBarTextColor.isSelected() == true)
    {
        demoButtonBarFont.setVisible(false);
        buttonBarTextColorChooserButton.setVisible(false);
    }
    else
    {
        demoButtonBarFont.setVisible(true);
        buttonBarTextColorChooserButton.setVisible(true);
    }
}
catch(Exception e)
{
    e.printStackTrace();
}
    }//GEN-LAST:event_useDefaultButtonBarTextColorActionPerformed

    private void buttonBarTextColorChooserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBarTextColorChooserButtonActionPerformed
        try
        {
 if(ProjectManager.get("registrationCodeLabelFont")!=null)
        {
            if(ProjectManager.get("registrationCodeLabelFont").equalsIgnoreCase("")==false)
            {
                Object[] tmpArray = getStringArraysFromString(ProjectManager.get("registrationCodeLabelFont"));
                Font retFont = FontChooser.showDialog(getParentComp(),"Font Chooser", new Font((String)tmpArray[0],new Integer((String)tmpArray[1]).intValue(), new Integer((String)tmpArray[2]).intValue()));
                if(retFont!=null)
                { 
                    ProjectManager.putTempNoFileWrite("registrationCodeLabelFont",retFont.getName() + "," + String.valueOf(retFont.getStyle()) + "," + String.valueOf(retFont.getSize()));
                }
                tmpArray = getStringArraysFromString(ProjectManager.get("registrationCodeLabelFont"));
                demoButtonBarFont.setFont(new Font((String)tmpArray[0],new Integer((String)tmpArray[1]).intValue(), new Integer((String)tmpArray[2]).intValue()));
                demoButtonBarFont.setText((String)tmpArray[0] + ", " + (String)tmpArray[1] + ", " + (String)tmpArray[2]);
            }
            else
            {
                Font retFont = FontChooser.showDialog(getParentComp(),"Font Chooser", new Font("Arial", 0, 12));
                if(retFont!=null)
                {
                    ProjectManager.putTempNoFileWrite("registrationCodeLabelFont",retFont.getName() + "," + String.valueOf(retFont.getStyle()) + "," + String.valueOf(retFont.getSize()));
                    Object[] tmpArray = getStringArraysFromString(ProjectManager.get("registrationCodeLabelFont"));
                    demoButtonBarFont.setFont(new Font((String)tmpArray[0],new Integer((String)tmpArray[1]).intValue(), new Integer((String)tmpArray[2]).intValue()));
                    demoButtonBarFont.setText((String)tmpArray[0] + ", " + (String)tmpArray[1] + ", " + (String)tmpArray[2]);
                }
            }
        }
        else
        {
                Font retFont = FontChooser.showDialog(getParentComp(),"Font Chooser", new Font("Arial", 0, 12));
                if(retFont!=null)
                {
                    ProjectManager.putTempNoFileWrite("registrationCodeLabelFont",retFont.getName() + "," + String.valueOf(retFont.getStyle()) + "," + String.valueOf(retFont.getSize()));
                    Object[] tmpArray = getStringArraysFromString(ProjectManager.get("registrationCodeLabelFont"));
                    demoButtonBarFont.setFont(new Font((String)tmpArray[0],new Integer((String)tmpArray[1]).intValue(), new Integer((String)tmpArray[2]).intValue()));
                    demoButtonBarFont.setText((String)tmpArray[0] + ", " + (String)tmpArray[1] + ", " + (String)tmpArray[2]);
                }
        }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
 
    }//GEN-LAST:event_buttonBarTextColorChooserButtonActionPerformed

    private static synchronized Object[] getStringArraysFromString(String textArrayString)
    {
        ArrayList aryList = new ArrayList();
        String tempString = "";
        while(textArrayString.indexOf(",")!=-1)
        {
            tempString = textArrayString.substring(0,textArrayString.indexOf(","));
            textArrayString = textArrayString.substring(textArrayString.indexOf(",") + 1);
            aryList.add(tempString);
        }
        aryList.add(textArrayString);
        return aryList.toArray();
    }    
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonBarBackgroundColorChooserButton;
    private javax.swing.JButton PreviewButton;
    private javax.swing.JPanel ProjectLocationsCenterPanel5;
    private javax.swing.JPanel ProjectLookAndFeelImages;
    private javax.swing.JPanel ProjectLookAndFeelImages1;
    private javax.swing.JPanel ProjectLookAndFeelImages4;
    private javax.swing.JPanel UIChoicesBottomPanel5;
    private javax.swing.JPanel UIChoicesBottomPanel6;
    private javax.swing.JPanel UIChoicesBottomPanel7;
    private javax.swing.JPanel UIChoicesBottomPanel8;
    private javax.swing.JPanel UIChoicesBottomPanel9;
    private javax.swing.JButton buttonBarTextColorChooserButton;
    private javax.swing.JLabel demoButtonBarFont;
    private javax.swing.JLabel demoProgressPanelTextFont;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lFiller43;
    private javax.swing.JLabel lFiller44;
    private javax.swing.JLabel lFiller46;
    private javax.swing.JLabel lFiller49;
    private javax.swing.JLabel lFiller50;
    private javax.swing.JLabel lFiller51;
    private javax.swing.JLabel lFiller57;
    private javax.swing.JLabel lFiller58;
    private javax.swing.JRadioButton rbPaymentFailurePreview;
    private javax.swing.JRadioButton rbPaymentPreview;
    private javax.swing.JRadioButton rbPaymentSuccessPreview;
    private javax.swing.JCheckBox useDefaultButtonBarBackgroundColor;
    private javax.swing.JCheckBox useDefaultButtonBarTextColor;
    // End of variables declaration//GEN-END:variables
    
}
