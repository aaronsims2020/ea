/*
 * ButtonPanel.java
 *
 * Created on June 3, 2004, 12:45 PM
 */
 
package com.trinity.ea.design.project.lookandfeel.preview.startupui.swing;
import com.trinity.ea.forms.gui.swing.ImageButton;
import javax.swing.ImageIcon;
import java.awt.Image;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Cursor;
import java.awt.Color;
import java.awt.Image;
import javax.swing.JLabel;
import javax.swing.JPanel;
import java.awt.ComponentOrientation;
import com.trinity.ea.util.BrowserLauncher;
import com.trinity.ea.design.common.file.ProjectManager;
import com.trinity.ea.util.Trial;
import java.net.URL;
import java.net.MalformedURLException;
import java.awt.Graphics2D;
import java.awt.Graphics;
import java.awt.RenderingHints;  

/**
 *
 * @author  aaronsc Trinity Software
 * Copyright Â©2003-2005 Trinity Software. All rights reserved.
 */
public class ButtonPanel extends javax.swing.JPanel {
    private ImageIcon btnFace = null;
    private ImageIcon btnFaceOnClick = null;
    private ImageIcon btnFaceInFocus = null;
    private int btnWidth = -1;
    private int btnHeight = -1;    

    /** Creates new form ButtonPanel */
    public ButtonPanel() {
        initComponents(false);
    }

    /** Creates new form ButtonPanel */
    public ButtonPanel(ImageIcon ButtonFace, ImageIcon ButtonFaceOnClick, ImageIcon ButtonFaceInFocus, int buttonWidth, int buttonHeight, int buttonBarHeightPadding) {
	  setPadButtonBarHeight(buttonBarHeightPadding);
	  btnWidth = buttonWidth;
	  btnHeight = buttonHeight;
	  btnFace = ButtonFace;
	  btnFaceOnClick = ButtonFaceOnClick;
	  btnFaceInFocus = ButtonFaceInFocus;
	  if(ButtonFace!=null)
	  {
		if(ButtonFaceOnClick!=null)
		{
			initComponents(true);
		}
		else
		{
			initComponents(false);
		}
	  }
	  else
	  {
        	initComponents(false);
	  }
    }
    
private boolean isImageButton = false;
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents(boolean isImgButton) {//GEN-BEGIN:initComponents
	  isImageButton = isImgButton;
        NorthPanel = new javax.swing.JPanel();
        NorthFiller = new javax.swing.JLabel();
        WestFiller = new javax.swing.JLabel();
        EastFiller = new javax.swing.JLabel();
        SouthFiller = new javax.swing.JLabel();
        WeblinkButton = new javax.swing.JLabel();
        CenterPanel = new javax.swing.JPanel();
        CenterButtonPanelFillerPanel = new javax.swing.JPanel();
        ButtonContentPanel = new javax.swing.JPanel();

        ButtonFiller = new javax.swing.JLabel();

	  if(isImageButton==true)
	  {
        	UseEvaluationImageButton = new ImageButton(btnFace,btnFaceOnClick,btnFaceInFocus,btnWidth,btnHeight);
        	BuyNowImageButton = new ImageButton(btnFace,btnFaceOnClick,btnFaceInFocus,btnWidth,btnHeight);
        	ActivateImageButton = new ImageButton(btnFace,btnFaceOnClick,btnFaceInFocus,btnWidth,btnHeight);
        	InformationImageButton = new ImageButton(btnFace,btnFaceOnClick,btnFaceInFocus,btnWidth,btnHeight);
        	ExitImageButton = new ImageButton(btnFace,btnFaceOnClick,btnFaceInFocus,btnWidth,btnHeight);
	  }
	  else
	  {
        	UseEvaluationButton = new javax.swing.JButton();
        	BuyNowButton = new javax.swing.JButton();
        	ActivateButton = new javax.swing.JButton();
        	InformationButton = new javax.swing.JButton();
        	ExitButton = new javax.swing.JButton();
	  }
//ImageButton(ImageIcon buttonFace, ImageIcon buttonFaceOnClick, int width, int height) 
  
        setLayout(new java.awt.BorderLayout());

        setMaximumSize(new java.awt.Dimension(110, 300));
        setMinimumSize(new java.awt.Dimension(110, 300));
        setPreferredSize(new java.awt.Dimension(110, 300));
        NorthPanel.setLayout(new java.awt.BorderLayout());

        NorthPanel.setMaximumSize(new java.awt.Dimension(100, 115));
        NorthPanel.setMinimumSize(new java.awt.Dimension(100, 115));
        NorthPanel.setPreferredSize(new java.awt.Dimension(100, 115));
        NorthFiller.setMaximumSize(new java.awt.Dimension(32767, 32767));
        NorthFiller.setMinimumSize(new java.awt.Dimension(5, 5));
        NorthFiller.setPreferredSize(new java.awt.Dimension(5, 5));
        NorthPanel.add(NorthFiller, java.awt.BorderLayout.NORTH);

        WestFiller.setMaximumSize(new java.awt.Dimension(32767, 32767));
        WestFiller.setMinimumSize(new java.awt.Dimension(5, 5));
        WestFiller.setPreferredSize(new java.awt.Dimension(5, 5));
        NorthPanel.add(WestFiller, java.awt.BorderLayout.WEST);

        EastFiller.setMaximumSize(new java.awt.Dimension(32767, 32767));
        EastFiller.setMinimumSize(new java.awt.Dimension(5, 5));
        EastFiller.setPreferredSize(new java.awt.Dimension(5, 5));
        NorthPanel.add(EastFiller, java.awt.BorderLayout.EAST);

        SouthFiller.setMaximumSize(new java.awt.Dimension(32767, 32767));
        SouthFiller.setMinimumSize(new java.awt.Dimension(5, 5));
        SouthFiller.setPreferredSize(new java.awt.Dimension(5, 5));
        NorthPanel.add(SouthFiller, java.awt.BorderLayout.SOUTH);

if(ProjectManager.get("btnBarImgPath")!=null)
{
	if(ProjectManager.get("btnBarImgPath").equalsIgnoreCase("")==false)
	{ 
		try
		{
			theImageRef = new javax.swing.ImageIcon(new URL(ProjectManager.get("btnBarImgPath")));
//
			if(ProjectManager.get("btnBarImgStretchToFitEnabled")!=null)
			{ 
				if(ProjectManager.get("btnBarImgStretchToFitEnabled").equalsIgnoreCase("true")==true)
				{
					WeblinkButton.setIcon(new ImageIcon(theImageRef.getImage().getScaledInstance(105, -1, Image.SCALE_DEFAULT)));
				}
				else
				{
					WeblinkButton.setIcon(theImageRef);
				}		 
			}
			else
			{
				WeblinkButton.setIcon(theImageRef);
			}

//
			if(ProjectManager.get("btnBarImgAlignTopEnabled")!=null)
			{ 
				if(ProjectManager.get("btnBarImgAlignTopEnabled").equalsIgnoreCase("true")==true)
				{
					WeblinkButton.setVerticalAlignment(javax.swing.SwingConstants.TOP);					
				}
			}
        		WeblinkButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		}
		catch(Exception e)
		{
			e.printStackTrace();
            	WeblinkButton.setText(ProjectManager.get("imageMissingText"));
        		WeblinkButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		}
      	WeblinkButton.setText("");
	}
	else
	{
            WeblinkButton.setText(ProjectManager.get("imageMissingText"));
        	WeblinkButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
	}
}
else
{
            WeblinkButton.setText(ProjectManager.get("imageMissingText"));
        	WeblinkButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
}
        WeblinkButton.setMaximumSize(new java.awt.Dimension(105, 105));
        WeblinkButton.setMinimumSize(new java.awt.Dimension(105, 105));
        WeblinkButton.setPreferredSize(new java.awt.Dimension(105, 105));
        WeblinkButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WeblinkButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                WeblinkButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                WeblinkButtonMouseExited(evt);
            }
        });

        NorthPanel.add(WeblinkButton, java.awt.BorderLayout.CENTER);

        add(NorthPanel, java.awt.BorderLayout.NORTH);

        CenterPanel.setLayout(new java.awt.BorderLayout());

        CenterPanel.add(CenterButtonPanelFillerPanel, java.awt.BorderLayout.CENTER);

        ButtonContentPanel.setPreferredSize(new java.awt.Dimension(335, getButtonPanelHeight()));
	  if(isImageButton==true)
	  {
        //UseEvaluationImageButton.setMnemonic('T');
        UseEvaluationImageButton.setText("Try");
        UseEvaluationImageButton.setMaximumSize(new java.awt.Dimension(btnWidth, btnHeight));
        UseEvaluationImageButton.setMinimumSize(new java.awt.Dimension(btnWidth, btnHeight));
        UseEvaluationImageButton.setPreferredSize(new java.awt.Dimension(btnWidth, btnHeight));
        UseEvaluationImageButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UseEvaluationImageButtonMouseClicked(evt);
            }
        });

        ButtonContentPanel.add(UseEvaluationImageButton);

        ButtonFiller.setMaximumSize(new java.awt.Dimension(btnWidth, 5));
        ButtonFiller.setMinimumSize(new java.awt.Dimension(btnWidth, 5));
        ButtonFiller.setPreferredSize(new java.awt.Dimension(btnWidth, 5));
        ButtonContentPanel.add(ButtonFiller);

        //BuyNowImageButton.setMnemonic('B');
        BuyNowImageButton.setText("Buy Now");
        BuyNowImageButton.setMaximumSize(new java.awt.Dimension(btnWidth, btnHeight));
        BuyNowImageButton.setMinimumSize(new java.awt.Dimension(btnWidth, btnHeight));
        BuyNowImageButton.setPreferredSize(new java.awt.Dimension(btnWidth, btnHeight));
        BuyNowImageButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BuyNowImageButtonMouseClicked(evt);
            }
        });
        ButtonContentPanel.add(BuyNowImageButton);

        //ActivateImageButton.setMnemonic('A');
        ActivateImageButton.setText("Activate");
        ActivateImageButton.setMaximumSize(new java.awt.Dimension(btnWidth, btnHeight));
        ActivateImageButton.setMinimumSize(new java.awt.Dimension(btnWidth, btnHeight));
        ActivateImageButton.setPreferredSize(new java.awt.Dimension(btnWidth, btnHeight));
        ActivateImageButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ActivateImageButtonMouseClicked(evt);
            }
        });
        ButtonContentPanel.add(ActivateImageButton);

        //InformationImageButton.setMnemonic('I');
        InformationImageButton.setText("Information");
        InformationImageButton.setMaximumSize(new java.awt.Dimension(btnWidth, btnHeight));
        InformationImageButton.setMinimumSize(new java.awt.Dimension(btnWidth, btnHeight));
        InformationImageButton.setPreferredSize(new java.awt.Dimension(btnWidth, btnHeight));
        InformationImageButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InformationImageButtonMouseClicked(evt);
            }
        });
        ButtonContentPanel.add(InformationImageButton);

        //ExitImageButton.setMnemonic('Q');
        ExitImageButton.setText("Quit");
        ExitImageButton.setMaximumSize(new java.awt.Dimension(btnWidth, btnHeight));
        ExitImageButton.setMinimumSize(new java.awt.Dimension(btnWidth, btnHeight));
        ExitImageButton.setPreferredSize(new java.awt.Dimension(btnWidth, btnHeight));
        ExitImageButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExitImageButtonMouseClicked(evt);
            }
        });

        ButtonContentPanel.add(ExitImageButton);
	  }
	  else
	  {
        //UseEvaluationButton.setMnemonic('T');
        UseEvaluationButton.setLabel("Try");
        UseEvaluationButton.setMaximumSize(new java.awt.Dimension(105, 23));
        UseEvaluationButton.setMinimumSize(new java.awt.Dimension(105, 23));
        UseEvaluationButton.setPreferredSize(new java.awt.Dimension(105, 23));
        UseEvaluationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UseEvaluationButtonActionPerformed(evt);
            }
        });

        ButtonContentPanel.add(UseEvaluationButton);

        ButtonFiller.setMaximumSize(new java.awt.Dimension(105, 5));
        ButtonFiller.setMinimumSize(new java.awt.Dimension(105, 5));
        ButtonFiller.setPreferredSize(new java.awt.Dimension(105, 5));
        ButtonContentPanel.add(ButtonFiller);

        //BuyNowButton.setMnemonic('B');
        BuyNowButton.setLabel("Buy Now");
        BuyNowButton.setMaximumSize(new java.awt.Dimension(105, 23));
        BuyNowButton.setMinimumSize(new java.awt.Dimension(105, 23));
        BuyNowButton.setPreferredSize(new java.awt.Dimension(105, 23));
        BuyNowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuyNowButtonActionPerformed(evt);
            }
        });

        ButtonContentPanel.add(BuyNowButton);

        //ActivateButton.setMnemonic('A');
        ActivateButton.setLabel("Activate");
        ActivateButton.setMaximumSize(new java.awt.Dimension(105, 23));
        ActivateButton.setMinimumSize(new java.awt.Dimension(105, 23));
        ActivateButton.setPreferredSize(new java.awt.Dimension(105, 23));
        ActivateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActivateButtonActionPerformed(evt);
            }
        });

        ButtonContentPanel.add(ActivateButton);

        //InformationButton.setMnemonic('I');
        InformationButton.setLabel("Information");
        InformationButton.setMaximumSize(new java.awt.Dimension(105, 23));
        InformationButton.setMinimumSize(new java.awt.Dimension(105, 23));
        InformationButton.setPreferredSize(new java.awt.Dimension(105, 23));
        InformationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InformationButtonActionPerformed(evt);
            }
        });

        ButtonContentPanel.add(InformationButton);

        //ExitButton.setMnemonic('Q');
        ExitButton.setLabel("Quit");
        ExitButton.setMaximumSize(new java.awt.Dimension(105, 23));
        ExitButton.setMinimumSize(new java.awt.Dimension(105, 23));
        ExitButton.setPreferredSize(new java.awt.Dimension(105, 23));
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        ButtonContentPanel.add(ExitButton);
	  }

        CenterPanel.add(ButtonContentPanel, java.awt.BorderLayout.SOUTH);

        add(CenterPanel, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents
 
    private void WeblinkButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WeblinkButtonMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_WeblinkButtonMouseExited

    private void WeblinkButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WeblinkButtonMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_WeblinkButtonMouseEntered

    private void WeblinkButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WeblinkButtonMouseClicked
       try
        {
            if(intActionType == 0)
            {
                BrowserLauncher.openURL(actionPackage);
            }
            else if(intActionType == 1)
            {
                try
                {
                    Class.forName(actionPackage).newInstance();
                }
                catch(InstantiationException e)
                {
                        System.out.println(e);
                }   
                catch(IllegalAccessException e)
                {
                        System.out.println(e);
                }                      
                catch(ClassNotFoundException e)
                {
                        System.out.println(e);
                }                    
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_WeblinkButtonMouseClicked

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        
    }//GEN-LAST:event_ExitButtonActionPerformed
    
    private int infoBtnActionType = -1;
    private int regBtnActionType = -1;
    private int buyNowBtnActionType = -1;    
    private int useEvalBtnActionType = -1; 
    
    private String infoBtnAction = "";
    private String regBtnAction = "";
    private String buyNowBtnAction = "";    
    private String useEvalBtnAction = "";

    public void setUseEvaluationButtonAction(int actionType, String strActionLink)
    {
        useEvalBtnActionType = actionType;
        useEvalBtnAction = strActionLink;
    }        
    
    public void setBuyNowButtonAction(int actionType, String strActionLink)
    {
        buyNowBtnActionType = actionType;
        buyNowBtnAction = strActionLink;
    }    
    
    public void setRegisterButtonAction(int actionType, String strActionLink)
    {
        regBtnActionType = actionType;
        regBtnAction = strActionLink;
    }
    
    public void setInformationButtonAction(int actionType, String strActionLink)
    {
        infoBtnActionType = actionType;
        infoBtnAction = strActionLink;
    }
    
    private void InformationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InformationButtonActionPerformed

    }//GEN-LAST:event_InformationButtonActionPerformed

    private void ActivateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActivateButtonActionPerformed
    }//GEN-LAST:event_ActivateButtonActionPerformed

    private void BuyNowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuyNowButtonActionPerformed
    }//GEN-LAST:event_BuyNowButtonActionPerformed

    private void UseEvaluationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UseEvaluationButtonActionPerformed
    }//GEN-LAST:event_UseEvaluationButtonActionPerformed




    private void InformationImageButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InformationButtonActionPerformed

    }//GEN-LAST:event_InformationButtonActionPerformed

    private void ActivateImageButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ActivateButtonActionPerformed
    }//GEN-LAST:event_ActivateButtonActionPerformed

    private void BuyNowImageButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BuyNowButtonActionPerformed
    }//GEN-LAST:event_BuyNowButtonActionPerformed

    private void UseEvaluationImageButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UseEvaluationButtonActionPerformed
    }//GEN-LAST:event_UseEvaluationButtonActionPerformed

    private void ExitImageButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UseEvaluationButtonActionPerformed
    }//GEN-LAST:event_UseEvaluationButtonActionPerformed

    private int intActionType = -1;
    private String actionPackage = null;
    public void setImageActionType(int actionType)
    {
        intActionType = actionType;
        try
        {
            if(intActionType!=-1)
            {
                WeblinkButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    
    public void setImageAction(String actionPackageName)
    {
        actionPackage = actionPackageName;
    }    
    
    private int imageWidth = -1;
    private int imageHeight = -1;
    private ImageIcon theImageRef = null;
    private int getImageHeight()
    {
        return theImageRef.getIconHeight();
    }

    private int getImageWidth()
    {
        return theImageRef.getIconWidth(); 
    }    
    
  
    public void setOverideDefaultPanelSize(int width, int height)
    {
        WeblinkButton.setMaximumSize(new java.awt.Dimension(width, height));
        WeblinkButton.setMinimumSize(new java.awt.Dimension(width, height));
        WeblinkButton.setPreferredSize(new java.awt.Dimension(width, height));       
    }  
    
    public void setImageButtonEnabled(boolean isEnabled)
    {
        WeblinkButton.setVisible(isEnabled);
        WestFiller.setVisible(isEnabled);
        EastFiller.setVisible(isEnabled);
        NorthFiller.setVisible(isEnabled);
        SouthFiller.setVisible(isEnabled);
        NorthPanel.setVisible(isEnabled);
    }    
    
    public void setUseEvaluationButtonEnabled(boolean isEnabled)
    {
	  if(isImageButton==true)
	  {
        	UseEvaluationImageButton.setVisible(isEnabled); 
	  }
	  else
	  {
        	UseEvaluationButton.setVisible(isEnabled); 
	  }      
    }

    public void setUseEvaluationButtonDisabled(boolean isDisabled)
    {
	  if(isImageButton==true)
	  {
	  if(isDisabled==true)
	  {
    		UseEvaluationImageButton.setEnabled(false);
	  }
	  else
	  {
        	UseEvaluationImageButton.setEnabled(true);
	  }       
	  }
	  else
	  {
	  if(isDisabled==true)
	  {
    		UseEvaluationButton.setEnabled(false);
	  }
	  else
	  {
        	UseEvaluationButton.setEnabled(true);
	  } 
	  }
    }
    
    public void setUseEvaluationButtonMnemonic(char mnemonic)
    {
	  if(isImageButton==true)
	  {
        	UseEvaluationImageButton.setMnemonic(mnemonic);
	  }
	  else
	  {
        	UseEvaluationButton.setMnemonic(mnemonic);
	  }
    } 
    
    public void setUseEvaluationButtonText(String text)
    {
	  if(isImageButton==true)
	  {
        	UseEvaluationImageButton.setText(text);
	  }
	  else
	  {
        	UseEvaluationButton.setText(text);
	  }
    }
    
    public void setBuyNowButtonEnabled(boolean isEnabled)
    {
	  if(isImageButton==true)
	  {
         BuyNowImageButton.setVisible(isEnabled);   
    	  }
	  else
	  {
         BuyNowButton.setVisible(isEnabled);   
	  }
    }  

    public void setBuyNowButtonDisabled(boolean isDisabled)
    {
	  if(isImageButton==true)
	  {
	  if(isDisabled==true)
	  {
        	BuyNowImageButton.setEnabled(false);
	  }
	  else
	  {
        	BuyNowImageButton.setEnabled(true);
	  }       
	  }
	  else
	  {
	  if(isDisabled==true)
	  {
        	BuyNowButton.setEnabled(false);
	  }
	  else
	  {
        	BuyNowButton.setEnabled(true);
	  }   
	  }
    }
    
    public void setBuyNowButtonMnemonic(char mnemonic)
    {
	  if(isImageButton==true)
	  {
         	BuyNowImageButton.setMnemonic(mnemonic);
	  }
	  else
	  {
		BuyNowButton.setMnemonic(mnemonic);
	  }
    } 

    public void setBuyNowButtonText(String text)
    {
	  if(isImageButton==true)
	  {
         BuyNowImageButton.setText(text);
	  }
	  else
	  {
         BuyNowButton.setText(text);
	  }
    }    
    
    public void setRegisterButtonEnabled(boolean isEnabled)
    {
	  if(isImageButton==true)
	  {
         ActivateImageButton.setVisible(isEnabled);
	  }
	  else
	  {
         ActivateButton.setVisible(isEnabled);
	  }
    }      
    
    public void setRegisterButtonMnemonic(char mnemonic)
    {
	  if(isImageButton==true)
	  {
         ActivateImageButton.setMnemonic(mnemonic);
	  }
	  else
	  {
         ActivateButton.setMnemonic(mnemonic);
	  }
    } 

    public void setRegisterButtonText(String text)
    {
	  if(isImageButton==true)
	  {
         ActivateImageButton.setText(text);
	  }
	  else
	  {
         ActivateButton.setText(text);
	  }
    }        
    
    public void setInformationButtonEnabled(boolean isEnabled)
    {
	  if(isImageButton==true)
	  {
         InformationImageButton.setVisible(isEnabled);
	  }
	  else
	  {
         InformationButton.setVisible(isEnabled);
	  }
    }   

    public void setInformationButtonMnemonic(char mnemonic)
    {
	  if(isImageButton==true)
	  {
         InformationImageButton.setMnemonic(mnemonic);
	  }
	  else
	  {
         InformationButton.setMnemonic(mnemonic);
	  }
    }     
 
    public void setInformationButtonText(String text)
    {
	  if(isImageButton==true)
	  {
         InformationImageButton.setText(text);
	  }
	  else
	  {
         InformationButton.setText(text);
	  }
    }      
    
    public void setExitButtonEnabled(boolean isEnabled)
    {
	  if(isImageButton==true)
	  {
        	ExitImageButton.setVisible(isEnabled);  
	  }
	  else
	  {
        	ExitButton.setVisible(isEnabled); 
	  }      
    }      
  
    public void setExitButtonMnemonic(char mnemonic)
    {
	  if(isImageButton==true)
	  {
         	ExitImageButton.setMnemonic(mnemonic);
	  }
	  else
	  {
         	ExitButton.setMnemonic(mnemonic);
	  }
    }         

    public void setExitButtonText(String text)
    {
	  if(isImageButton==true)
	  {
         ExitImageButton.setText(text);
	  }
	  else
	  {
         ExitButton.setText(text);
	  }
    }   
 
    public void setButtonBackgroundColor(Color BGColor)
    {
	  if(isImageButton==false)
	  {
         ActivateButton.setBackground(BGColor);
         BuyNowButton.setBackground(BGColor);
         ExitButton.setBackground(BGColor);
         InformationButton.setBackground(BGColor);
         UseEvaluationButton.setBackground(BGColor);
	  }
    }  
    
    public void setBackgroundColor(Color BGColor)
    {
         setBackground(BGColor);
         WeblinkButton.setBackground(BGColor);
         WestFiller.setBackground(BGColor);
         EastFiller.setBackground(BGColor);
         NorthFiller.setBackground(BGColor);
         SouthFiller.setBackground(BGColor);
         NorthPanel.setBackground(BGColor);
         ButtonContentPanel.setBackground(BGColor);
         ButtonFiller.setBackground(BGColor);
         CenterButtonPanelFillerPanel.setBackground(BGColor);
         CenterPanel.setBackground(BGColor);
	   if(isImageButton==true)
	   {
         	ExitImageButton.setBackground(BGColor);
         	InformationImageButton.setBackground(BGColor); 
         	ActivateImageButton.setBackground(BGColor);       
         	BuyNowImageButton.setBackground(BGColor);
         	UseEvaluationImageButton.setBackground(BGColor); 
	   }
    }  

    public void setImageBackgroundColor(Color BGColor)
    {
         WeblinkButton.setBackground(BGColor);
         WestFiller.setBackground(BGColor);
         EastFiller.setBackground(BGColor);
         NorthFiller.setBackground(BGColor);
         SouthFiller.setBackground(BGColor);
         NorthPanel.setBackground(BGColor);
    }

    public void setTextColor(Color textColor)
    {
         WeblinkButton.setForeground(textColor); 
	  if(isImageButton==true)
	  {
         ExitImageButton.setForeground(textColor); 
         InformationImageButton.setForeground(textColor);  
         ActivateImageButton.setForeground(textColor);         
         BuyNowImageButton.setForeground(textColor); 
         UseEvaluationImageButton.setForeground(textColor); 
	  }
	  else
	  {
         ExitButton.setForeground(textColor); 
         InformationButton.setForeground(textColor);  
         ActivateButton.setForeground(textColor);         
         BuyNowButton.setForeground(textColor); 
         UseEvaluationButton.setForeground(textColor); 
	  }    
    }
    
    public boolean setTextFont(String strFontName, int fontStyle, int fontSize)
    {
        try
        {
            WeblinkButton.setFont(new java.awt.Font(strFontName, fontStyle, fontSize));
	  if(isImageButton==true)
	  {
            ExitImageButton.setFont(new java.awt.Font(strFontName, fontStyle, fontSize)); 
            InformationImageButton.setFont(new java.awt.Font(strFontName, fontStyle, fontSize));
            ActivateImageButton.setFont(new java.awt.Font(strFontName, fontStyle, fontSize));       
            BuyNowImageButton.setFont(new java.awt.Font(strFontName, fontStyle, fontSize));
            UseEvaluationImageButton.setFont(new java.awt.Font(strFontName, fontStyle, fontSize));  
	  }
	  else
	  {
            ExitButton.setFont(new java.awt.Font(strFontName, fontStyle, fontSize)); 
            InformationButton.setFont(new java.awt.Font(strFontName, fontStyle, fontSize));
            ActivateButton.setFont(new java.awt.Font(strFontName, fontStyle, fontSize));       
            BuyNowButton.setFont(new java.awt.Font(strFontName, fontStyle, fontSize));
            UseEvaluationButton.setFont(new java.awt.Font(strFontName, fontStyle, fontSize)); 
	  }        
            return true;
        }
        catch(Exception e)
        {
            e.printStackTrace(); 
            return false;
        }
    }     
    
    public void setComponentOrientation(ComponentOrientation theOrientation)
    {
        WestFiller.setComponentOrientation(theOrientation);
        EastFiller.setComponentOrientation(theOrientation);
        NorthFiller.setComponentOrientation(theOrientation);
        SouthFiller.setComponentOrientation(theOrientation);
        NorthPanel.setComponentOrientation(theOrientation);
        ButtonContentPanel.setComponentOrientation(theOrientation);
        ButtonFiller.setComponentOrientation(theOrientation);
        CenterButtonPanelFillerPanel.setComponentOrientation(theOrientation);
        CenterPanel.setComponentOrientation(theOrientation);    
        WeblinkButton.setComponentOrientation(theOrientation);
	  if(isImageButton==true)
	  {
        	ExitImageButton.setComponentOrientation(theOrientation);
        	InformationImageButton.setComponentOrientation(theOrientation);
       	ActivateImageButton.setComponentOrientation(theOrientation);
        	BuyNowImageButton.setComponentOrientation(theOrientation);
        	UseEvaluationImageButton.setComponentOrientation(theOrientation);
	  }
	  else
	  {
        	ExitButton.setComponentOrientation(theOrientation);
        	InformationButton.setComponentOrientation(theOrientation);
       	ActivateButton.setComponentOrientation(theOrientation);
        	BuyNowButton.setComponentOrientation(theOrientation);
        	UseEvaluationButton.setComponentOrientation(theOrientation);
	  }
    }    
    private dlgStartupWindowVerticalButtonBar theParent = null;
    	protected void setMasterControlComp(dlgStartupWindowVerticalButtonBar theDialog)
	{
	   theParent = theDialog;
	}

	private int pixelHeightPadding = 0;
	public void setPadButtonBarHeight(int pixelsHeightPadding)
	{
		pixelHeightPadding = pixelsHeightPadding;
	}

	private int getButtonPanelHeight()
	{
		int heightSum = 156;
		int btnHeightSum = 28;
	      if(isImageButton==true)
	      {
			btnHeightSum = btnHeight + 5;
			heightSum = (btnHeight + 5) * 5;
			heightSum = heightSum + pixelHeightPadding;
	      }
		try
		{
             if(ProjectManager.get("btnBarUseEvalButtonEnabled")!=null)
		 {
			if(ProjectManager.get("btnBarUseEvalButtonEnabled").equalsIgnoreCase("true")==false)
			{
				heightSum = heightSum - btnHeightSum;	
			}
		 }
		 else
		 {
				heightSum = heightSum - btnHeightSum;	
		 }
             if(ProjectManager.get("btnBarBuyNowButtonEnabled")!=null)
		 {
			if(ProjectManager.get("btnBarBuyNowButtonEnabled").equalsIgnoreCase("true")==false)
			{
				heightSum = heightSum - btnHeightSum;	
			}
		 }
		 else
		 {
				heightSum = heightSum - btnHeightSum;	
		 }
             if(ProjectManager.get("btnBarRegButtonEnabled")!=null)
		 {
			if(ProjectManager.get("btnBarRegButtonEnabled").equalsIgnoreCase("true")==false)
			{
				heightSum = heightSum - btnHeightSum;	
			}
		 }
		 else
		 {
				heightSum = heightSum - btnHeightSum;	
		 }
             if(ProjectManager.get("btnBarInfoButtonEnabled")!=null)
		 {
			if(ProjectManager.get("btnBarInfoButtonEnabled").equalsIgnoreCase("true")==false)
			{
				heightSum = heightSum - btnHeightSum;	
			}
		 }
		 else
		 {
				heightSum = heightSum - btnHeightSum;	
		 }
             if(ProjectManager.get("btnBarExitButtonEnabled")!=null)
		 {
			if(ProjectManager.get("btnBarExitButtonEnabled").equalsIgnoreCase("true")==false)
			{
				heightSum = heightSum - btnHeightSum;	
			}
		 }
		 else
		 {
				heightSum = heightSum - btnHeightSum;	
		 }
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
	   return heightSum;
	}

    public void paint(Graphics g)
    {
	Graphics2D g2 = (Graphics2D) g;
	g2.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
	super.paint(g);
    } 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ActivateButton;
    private ImageButton ActivateImageButton;
    private javax.swing.JPanel ButtonContentPanel;
    private javax.swing.JLabel ButtonFiller;
    private javax.swing.JButton BuyNowButton;
    private ImageButton BuyNowImageButton;
    private javax.swing.JPanel CenterButtonPanelFillerPanel;
    private javax.swing.JPanel CenterPanel;
    private javax.swing.JLabel EastFiller;
    private javax.swing.JButton ExitButton;
    private ImageButton ExitImageButton;
    private javax.swing.JButton InformationButton;
    private ImageButton InformationImageButton;
    private javax.swing.JLabel NorthFiller;
    private javax.swing.JPanel NorthPanel;
    private javax.swing.JLabel SouthFiller;
    private javax.swing.JButton UseEvaluationButton;
    private ImageButton UseEvaluationImageButton;
    private javax.swing.JLabel WeblinkButton;
    private javax.swing.JLabel WestFiller;

    // End of variables declaration//GEN-END:variables
    
}
