/*
 * AutoUpdateFileListPanel.java
 *
 * Created on November 11, 2004, 8:58 PM
 */
package com.trinity.ea.design.common.project;

import com.trinity.ea.design.common.project.AddFileDialog;
import com.trinity.ea.design.common.file.ProjectManager;
import com.trinity.ea.design.common.panel.EAPanel;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.net.MalformedURLException;
import java.awt.*;
import javax.swing.*; 
import javax.swing.border.*;
import java.util.ArrayList;

/**
 *
 * @author  aaronsc Trinity Software
 * Copyright Â©2004-2005 Trinity Software. All rights reserved.
 */
public class AutoUpdateFileListPanel extends EAPanel 
{
    /** Creates new form AutoUpdateFileListPanel */
    public AutoUpdateFileListPanel() {
        initComponents();
        setProjectData();
    }
    
    public synchronized void getDataUpdate()
    {
        try
        {
            ProjectManager.saveTempNow(); 
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }   
 
    public synchronized void setProjectData()
    {
        try
        {   
           if(ProjectManager.get("autoUpdateCP")!=null)
           {
                FileList.setListData(getStringArrayFromString(ProjectManager.get("autoUpdateCP")));
           }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }   
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        NorthPanel = new javax.swing.JPanel();
        HeaderTitleLabel = new javax.swing.JLabel();
        TheFileListPanel = new javax.swing.JPanel();
        FileListScrollPane = new javax.swing.JScrollPane();
        FileList = new javax.swing.JList();
        ButtonPanel = new javax.swing.JPanel();
        AddFileButtonPanel = new javax.swing.JPanel();
        Filler1 = new javax.swing.JLabel();
        AddFile = new javax.swing.JButton();
        Filler3 = new javax.swing.JLabel();
        RemoveFileButtonPanel = new javax.swing.JPanel();
        Filler2 = new javax.swing.JLabel();
        RemoveFile = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        NorthPanel.setLayout(new java.awt.BorderLayout());

        HeaderTitleLabel.setFont(new java.awt.Font("Arial", 0, 12));
        HeaderTitleLabel.setText("Application Files:");
        HeaderTitleLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                HeaderTitleLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                HeaderTitleLabelMouseExited(evt);
            }
        });

        NorthPanel.add(HeaderTitleLabel, java.awt.BorderLayout.CENTER);

        add(NorthPanel, java.awt.BorderLayout.NORTH);

        TheFileListPanel.setLayout(new java.awt.BorderLayout());

        FileListScrollPane.setPreferredSize(new java.awt.Dimension(400, 78));
        FileListScrollPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                FileListScrollPaneMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                FileListScrollPaneMouseExited(evt);
            }
        });

        FileList.setFont(new java.awt.Font("Arial", 0, 11));
        FileList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                FileListMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                FileListMouseExited(evt);
            }
        });

        FileListScrollPane.setViewportView(FileList);

        TheFileListPanel.add(FileListScrollPane, java.awt.BorderLayout.CENTER);

        add(TheFileListPanel, java.awt.BorderLayout.CENTER);

        ButtonPanel.setLayout(new javax.swing.BoxLayout(ButtonPanel, javax.swing.BoxLayout.Y_AXIS));

        ButtonPanel.setMaximumSize(new java.awt.Dimension(110, 32767));
        ButtonPanel.setMinimumSize(new java.awt.Dimension(110, 38));
        ButtonPanel.setPreferredSize(new java.awt.Dimension(110, 38));
        AddFileButtonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        AddFileButtonPanel.setMaximumSize(new java.awt.Dimension(110, 25));
        AddFileButtonPanel.setMinimumSize(new java.awt.Dimension(110, 25));
        AddFileButtonPanel.setPreferredSize(new java.awt.Dimension(110, 25));
        Filler1.setText("jLabel1");
        Filler1.setMaximumSize(new java.awt.Dimension(5, 5));
        Filler1.setMinimumSize(new java.awt.Dimension(5, 5));
        Filler1.setPreferredSize(new java.awt.Dimension(5, 5));
        AddFileButtonPanel.add(Filler1);

        AddFile.setFont(new java.awt.Font("Arial", 0, 12));
        AddFile.setMnemonic('A');
        AddFile.setLabel("Add File");
        AddFile.setMaximumSize(new java.awt.Dimension(103, 25));
        AddFile.setMinimumSize(new java.awt.Dimension(103, 25));
        AddFile.setPreferredSize(new java.awt.Dimension(103, 25));
        AddFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddFileActionPerformed(evt);
            }
        });
        AddFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AddFileMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AddFileMouseExited(evt);
            }
        });

        AddFileButtonPanel.add(AddFile);

        ButtonPanel.add(AddFileButtonPanel);

        Filler3.setText("jLabel1");
        Filler3.setMaximumSize(new java.awt.Dimension(5, 5));
        Filler3.setMinimumSize(new java.awt.Dimension(5, 5));
        Filler3.setPreferredSize(new java.awt.Dimension(5, 5));
        ButtonPanel.add(Filler3);

        RemoveFileButtonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        RemoveFileButtonPanel.setMaximumSize(new java.awt.Dimension(110, 25));
        RemoveFileButtonPanel.setMinimumSize(new java.awt.Dimension(110, 25));
        RemoveFileButtonPanel.setPreferredSize(new java.awt.Dimension(110, 25));
        Filler2.setText("");
        Filler2.setMaximumSize(new java.awt.Dimension(5, 5));
        Filler2.setMinimumSize(new java.awt.Dimension(5, 5));
        Filler2.setPreferredSize(new java.awt.Dimension(5, 5));
        RemoveFileButtonPanel.add(Filler2);

        RemoveFile.setFont(new java.awt.Font("Arial", 0, 12));
        RemoveFile.setMnemonic('R');
        RemoveFile.setLabel("Remove File");
        RemoveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveFileActionPerformed(evt);
            }
        });
        RemoveFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RemoveFileMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RemoveFileMouseExited(evt);
            }
        });

        RemoveFileButtonPanel.add(RemoveFile);

        ButtonPanel.add(RemoveFileButtonPanel);

        add(ButtonPanel, java.awt.BorderLayout.EAST);

    }//GEN-END:initComponents

    private void FileListScrollPaneMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FileListScrollPaneMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_FileListScrollPaneMouseExited

    private void FileListScrollPaneMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FileListScrollPaneMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_FileListScrollPaneMouseEntered

    private void FileListMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FileListMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_FileListMouseExited

    private void FileListMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FileListMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_FileListMouseEntered

    private void HeaderTitleLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeaderTitleLabelMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_HeaderTitleLabelMouseExited

    private void HeaderTitleLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeaderTitleLabelMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_HeaderTitleLabelMouseEntered

    private void RemoveFileMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RemoveFileMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_RemoveFileMouseExited

    private void RemoveFileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RemoveFileMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_RemoveFileMouseEntered

    private void AddFileMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddFileMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_AddFileMouseExited

    private void AddFileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddFileMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_AddFileMouseEntered

    private void RemoveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveFileActionPerformed
        try
        {
            int selIndex = FileList.getSelectedIndex();
            if(selIndex!=-1)
            {
               if(ProjectManager.get("autoUpdateCP")!=null)
               {
                    if(ProjectManager.get("autoUpdateCP").equalsIgnoreCase("")==false)
                    {    
                        Object[] cpArray = getStringArrayFromString(ProjectManager.get("autoUpdateCP"));
                        ArrayList theList = new ArrayList(cpArray.length - 1);
                        String newCPString = "";
                        for(int i = 0;i<cpArray.length;i++)
                        {
                            if(selIndex!=i)
                            {
                                theList.add((String)cpArray[i]);
                            }
                        }
                        theList.trimToSize();
                        Object[] cpArray2 = theList.toArray();
                        if(0<cpArray2.length)
                        {
                            newCPString = (String)cpArray2[0];
                        }
                        for(int i = 1;i<cpArray2.length;i++)
                        {
                            newCPString = newCPString + "," + ((String)cpArray2[i]);
                        }
                        ProjectManager.put("autoUpdateCP", newCPString);
                    }
                }                
            }
            setProjectData();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_RemoveFileActionPerformed

    private void AddFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddFileActionPerformed
    try
    {
        String strCPFile = AddFileDialog.showDialog(new Frame(),"Choose File");
	 if(strCPFile.equalsIgnoreCase("")==false)
	 {
       if(ProjectManager.get("autoUpdateCP")!=null)
                {
                    if(ProjectManager.get("autoUpdateCP").equalsIgnoreCase("")==false)
                    {    
                        ProjectManager.put("autoUpdateCP", ProjectManager.get("autoUpdateCP") + "," + strCPFile);
                    }
                    else
                    {
                        ProjectManager.put("autoUpdateCP", strCPFile);
                    }
                }
                else
                {
                    ProjectManager.put("autoUpdateCP", strCPFile);
                }
        setProjectData();
	}
    }
    catch(Exception e)
    {
        e.printStackTrace();
    }
    }//GEN-LAST:event_AddFileActionPerformed
    
    private Object[] getStringArrayFromString(String theString)
    {
        ArrayList al = new ArrayList();
        String parseString = theString;
        if(parseString.indexOf(",") !=-1)
        {
            while(parseString.indexOf(",") !=-1)
            {
                al.add(parseString.substring(0,parseString.indexOf(",")));
                parseString = parseString.substring(parseString.indexOf(",") + 1);
            }
            al.add(parseString);
            al.trimToSize();
            //Parse key/pair values
            return al.toArray();
        }  
        al.add(parseString);
        al.trimToSize();
        //Parse key/pair values
        return al.toArray();        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddFile;
    private javax.swing.JPanel AddFileButtonPanel;
    private javax.swing.JPanel ButtonPanel;
    private javax.swing.JList FileList;
    private javax.swing.JScrollPane FileListScrollPane;
    private javax.swing.JLabel Filler1;
    private javax.swing.JLabel Filler2;
    private javax.swing.JLabel Filler3;
    private javax.swing.JLabel HeaderTitleLabel;
    private javax.swing.JPanel NorthPanel;
    private javax.swing.JButton RemoveFile;
    private javax.swing.JPanel RemoveFileButtonPanel;
    private javax.swing.JPanel TheFileListPanel;
    // End of variables declaration//GEN-END:variables
    
}
