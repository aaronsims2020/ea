/*
 * SkipjackPaymentProvider.java
 *
 * Created on April 23, 2004, 10:16 PM
 */
 
package com.trinity.ea.design.common.project;
import com.trinity.ea.design.common.project.NewProject;
import com.trinity.ea.design.common.file.ProjectManager;
import com.trinity.ea.design.common.panel.EAPanel;
import javax.swing.ImageIcon;
import java.util.HashMap;
import java.util.ArrayList;
import java.awt.Font;
import javax.swing.ButtonGroup;
import javax.swing.JPanel;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.JRadioButton;
import javax.swing.BoxLayout;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.text.ParseException;

/** 
 *
 * @author  aaronsc Trinity Software
 * Copyright Â©2003-2004 Trinity Software. All rights reserved.
 */
public class SkipjackPaymentProvider extends EAPanel
{

 /** Creates new form SkipjackPaymentProvider */
    public SkipjackPaymentProvider() {
        initComponents();
        setProjectData();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        adTrackingButtonGroup = new javax.swing.ButtonGroup();
        followUpMessagesButtonGroup = new javax.swing.ButtonGroup();
        ListNamePanel = new javax.swing.JPanel();
        lFiller15 = new javax.swing.JLabel();
        lFiller18 = new javax.swing.JLabel();
        lMerchantID = new javax.swing.JLabel();
        lFiller16 = new javax.swing.JLabel();
        tfMerchantID = new javax.swing.JTextField();
        lFiller17 = new javax.swing.JLabel();
        AdTrackerPanel = new javax.swing.JPanel();
        AdTrackingYesNoPanel = new javax.swing.JPanel();
        PriceBranchImage = new javax.swing.JLabel();
        lFiller19 = new javax.swing.JLabel();
        lPrice = new javax.swing.JLabel();
        tfPrice = new javax.swing.JTextField();
        lFiller13 = new javax.swing.JLabel();
        lFiller14 = new javax.swing.JLabel();
        AutoResponsePanel = new javax.swing.JPanel();
        AutoResponseYesNoPanel = new javax.swing.JPanel();
        CVV2BranchImage = new javax.swing.JLabel();
        lFiller23 = new javax.swing.JLabel();
        lCVVEnabled = new javax.swing.JLabel();
        radioCVV2Yes = new javax.swing.JRadioButton();
        radioCVV2No = new javax.swing.JRadioButton();
        lFiller2 = new javax.swing.JLabel();
        lFiller4 = new javax.swing.JLabel();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        ListNamePanel.setLayout(new javax.swing.BoxLayout(ListNamePanel, javax.swing.BoxLayout.X_AXIS));

        ListNamePanel.setMaximumSize(new java.awt.Dimension(2147483647, 26));
        ListNamePanel.setMinimumSize(new java.awt.Dimension(600, 26));
        ListNamePanel.setPreferredSize(new java.awt.Dimension(800, 26));
        lFiller15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/tree/topleftbranch.png")));
        lFiller15.setText("   ");
        lFiller15.setMaximumSize(new java.awt.Dimension(20, 25));
        lFiller15.setMinimumSize(new java.awt.Dimension(20, 25));
        lFiller15.setPreferredSize(new java.awt.Dimension(20, 25));
        ListNamePanel.add(lFiller15);

        lFiller18.setMaximumSize(new java.awt.Dimension(5, 15));
        lFiller18.setMinimumSize(new java.awt.Dimension(5, 16));
        lFiller18.setPreferredSize(new java.awt.Dimension(5, 16));
        ListNamePanel.add(lFiller18);

        lMerchantID.setFont(new java.awt.Font("Arial", 0, 12));
        lMerchantID.setText("HTML Processing Serial Number:");
        lMerchantID.setMaximumSize(new java.awt.Dimension(200, 15));
        lMerchantID.setMinimumSize(new java.awt.Dimension(200, 15));
        lMerchantID.setPreferredSize(new java.awt.Dimension(200, 15));
        lMerchantID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lMerchantIDMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lMerchantIDMouseExited(evt);
            }
        });

        ListNamePanel.add(lMerchantID);

        lFiller16.setText("   ");
        lFiller16.setMaximumSize(new java.awt.Dimension(10, 15));
        lFiller16.setMinimumSize(new java.awt.Dimension(10, 16));
        lFiller16.setPreferredSize(new java.awt.Dimension(10, 16));
        ListNamePanel.add(lFiller16);

        tfMerchantID.setFont(new java.awt.Font("Arial", 0, 12));
        tfMerchantID.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        tfMerchantID.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        tfMerchantID.setMaximumSize(new java.awt.Dimension(160, 20));
        tfMerchantID.setMinimumSize(new java.awt.Dimension(160, 20));
        tfMerchantID.setPreferredSize(new java.awt.Dimension(160, 20));
        tfMerchantID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tfMerchantIDMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tfMerchantIDMouseExited(evt);
            }
        });

        ListNamePanel.add(tfMerchantID);

        lFiller17.setText("   ");
        lFiller17.setMaximumSize(new java.awt.Dimension(15, 15));
        lFiller17.setMinimumSize(new java.awt.Dimension(15, 16));
        lFiller17.setPreferredSize(new java.awt.Dimension(15, 16));
        ListNamePanel.add(lFiller17);

        add(ListNamePanel);

        AdTrackerPanel.setLayout(new javax.swing.BoxLayout(AdTrackerPanel, javax.swing.BoxLayout.Y_AXIS));

        AdTrackerPanel.setMaximumSize(new java.awt.Dimension(2147483647, 26));
        AdTrackerPanel.setMinimumSize(new java.awt.Dimension(600, 26));
        AdTrackerPanel.setPreferredSize(new java.awt.Dimension(800, 26));
        AdTrackingYesNoPanel.setLayout(new javax.swing.BoxLayout(AdTrackingYesNoPanel, javax.swing.BoxLayout.X_AXIS));

        AdTrackingYesNoPanel.setMaximumSize(new java.awt.Dimension(2147483647, 26));
        AdTrackingYesNoPanel.setMinimumSize(new java.awt.Dimension(600, 26));
        AdTrackingYesNoPanel.setPreferredSize(new java.awt.Dimension(800, 26));
        PriceBranchImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/tree/leftcenterbranch.png")));
        PriceBranchImage.setText("   ");
        PriceBranchImage.setMaximumSize(new java.awt.Dimension(20, 25));
        PriceBranchImage.setMinimumSize(new java.awt.Dimension(20, 25));
        PriceBranchImage.setPreferredSize(new java.awt.Dimension(20, 25));
        PriceBranchImage.setOpaque(true);
        PriceBranchImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PriceBranchImageMouseClicked(evt);
            }
        });

        AdTrackingYesNoPanel.add(PriceBranchImage);

        lFiller19.setMaximumSize(new java.awt.Dimension(5, 15));
        lFiller19.setMinimumSize(new java.awt.Dimension(5, 16));
        lFiller19.setPreferredSize(new java.awt.Dimension(5, 16));
        lFiller19.setOpaque(true);
        AdTrackingYesNoPanel.add(lFiller19);

        lPrice.setFont(new java.awt.Font("Arial", 0, 12));
        lPrice.setText("Product Purchase Price:");
        lPrice.setMaximumSize(new java.awt.Dimension(210, 15));
        lPrice.setMinimumSize(new java.awt.Dimension(210, 15));
        lPrice.setPreferredSize(new java.awt.Dimension(210, 15));
        lPrice.setOpaque(true);
        lPrice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lPriceMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lPriceMouseExited(evt);
            }
        });

        AdTrackingYesNoPanel.add(lPrice);

        tfPrice.setFont(new java.awt.Font("Arial", 0, 12));
        tfPrice.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        tfPrice.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        tfPrice.setText("0.00");
        tfPrice.setMaximumSize(new java.awt.Dimension(160, 20));
        tfPrice.setMinimumSize(new java.awt.Dimension(160, 20));
        tfPrice.setPreferredSize(new java.awt.Dimension(160, 20));
        AdTrackingYesNoPanel.add(tfPrice);

        lFiller13.setText("   ");
        lFiller13.setMaximumSize(new java.awt.Dimension(300, 15));
        lFiller13.setMinimumSize(new java.awt.Dimension(10, 16));
        lFiller13.setPreferredSize(new java.awt.Dimension(10, 16));
        lFiller13.setOpaque(true);
        AdTrackingYesNoPanel.add(lFiller13);

        lFiller14.setText("   ");
        lFiller14.setMaximumSize(new java.awt.Dimension(15, 15));
        lFiller14.setMinimumSize(new java.awt.Dimension(15, 16));
        lFiller14.setPreferredSize(new java.awt.Dimension(15, 16));
        lFiller14.setOpaque(true);
        AdTrackingYesNoPanel.add(lFiller14);

        AdTrackerPanel.add(AdTrackingYesNoPanel);

        add(AdTrackerPanel);

        AutoResponsePanel.setLayout(new javax.swing.BoxLayout(AutoResponsePanel, javax.swing.BoxLayout.Y_AXIS));

        AutoResponseYesNoPanel.setLayout(new javax.swing.BoxLayout(AutoResponseYesNoPanel, javax.swing.BoxLayout.X_AXIS));

        AutoResponseYesNoPanel.setMaximumSize(new java.awt.Dimension(2147483647, 26));
        AutoResponseYesNoPanel.setMinimumSize(new java.awt.Dimension(600, 26));
        AutoResponseYesNoPanel.setPreferredSize(new java.awt.Dimension(800, 26));
        CVV2BranchImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/tree/bottomleftbranch.png")));
        CVV2BranchImage.setText("   ");
        CVV2BranchImage.setMaximumSize(new java.awt.Dimension(20, 25));
        CVV2BranchImage.setMinimumSize(new java.awt.Dimension(20, 25));
        CVV2BranchImage.setPreferredSize(new java.awt.Dimension(20, 25));
        CVV2BranchImage.setOpaque(true);
        CVV2BranchImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CVV2BranchImageMouseClicked(evt);
            }
        });

        AutoResponseYesNoPanel.add(CVV2BranchImage);

        lFiller23.setMaximumSize(new java.awt.Dimension(5, 15));
        lFiller23.setMinimumSize(new java.awt.Dimension(5, 16));
        lFiller23.setPreferredSize(new java.awt.Dimension(5, 16));
        AutoResponseYesNoPanel.add(lFiller23);

        lCVVEnabled.setFont(new java.awt.Font("Arial", 0, 12));
        lCVVEnabled.setText("Credit Card Verification Code Enabled (CVV2)?");
        lCVVEnabled.setMaximumSize(new java.awt.Dimension(290, 15));
        lCVVEnabled.setMinimumSize(new java.awt.Dimension(290, 15));
        lCVVEnabled.setPreferredSize(new java.awt.Dimension(290, 15));
        lCVVEnabled.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lCVVEnabledMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lCVVEnabledMouseExited(evt);
            }
        });

        AutoResponseYesNoPanel.add(lCVVEnabled);

        radioCVV2Yes.setFont(new java.awt.Font("Arial", 1, 12));
        radioCVV2Yes.setText("Yes");
        followUpMessagesButtonGroup.add(radioCVV2Yes);
        radioCVV2Yes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioCVV2YesActionPerformed(evt);
            }
        });
        radioCVV2Yes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                radioCVV2YesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                radioCVV2YesMouseExited(evt);
            }
        });

        AutoResponseYesNoPanel.add(radioCVV2Yes);

        radioCVV2No.setFont(new java.awt.Font("Arial", 1, 12));
        radioCVV2No.setSelected(true);
        radioCVV2No.setText("No");
        followUpMessagesButtonGroup.add(radioCVV2No);
        radioCVV2No.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioCVV2NoActionPerformed(evt);
            }
        });
        radioCVV2No.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                radioCVV2NoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                radioCVV2NoMouseExited(evt);
            }
        });

        AutoResponseYesNoPanel.add(radioCVV2No);

        lFiller2.setText("   ");
        lFiller2.setMaximumSize(new java.awt.Dimension(300, 15));
        lFiller2.setMinimumSize(new java.awt.Dimension(10, 16));
        lFiller2.setPreferredSize(new java.awt.Dimension(10, 16));
        AutoResponseYesNoPanel.add(lFiller2);

        lFiller4.setText("   ");
        lFiller4.setMaximumSize(new java.awt.Dimension(15, 15));
        lFiller4.setMinimumSize(new java.awt.Dimension(15, 16));
        lFiller4.setPreferredSize(new java.awt.Dimension(15, 16));
        AutoResponseYesNoPanel.add(lFiller4);

        AutoResponsePanel.add(AutoResponseYesNoPanel);

        add(AutoResponsePanel);

    }//GEN-END:initComponents

    private void tfMerchantIDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfMerchantIDMouseEntered
        // Add your handling code here:
    }//GEN-LAST:event_tfMerchantIDMouseEntered

    private void tfMerchantIDMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfMerchantIDMouseExited
        // Add your handling code here:
    }//GEN-LAST:event_tfMerchantIDMouseExited

    private void lCVVEnabledMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lCVVEnabledMouseExited
        ((NewProject)getParentComponent()).setStatus("");
    }//GEN-LAST:event_lCVVEnabledMouseExited

    private void lCVVEnabledMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lCVVEnabledMouseEntered
        ((NewProject)getParentComponent()).setStatus("Select Yes to enable Credit Card Verification Code Support (CVV2).");
    }//GEN-LAST:event_lCVVEnabledMouseEntered

    private void lPriceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lPriceMouseExited
        ((NewProject)getParentComponent()).setStatus("");
    }//GEN-LAST:event_lPriceMouseExited

    private void lPriceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lPriceMouseEntered
        ((NewProject)getParentComponent()).setStatus("Specify the total purchase price.");
    }//GEN-LAST:event_lPriceMouseEntered

    private void lMerchantIDMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lMerchantIDMouseExited
         ((NewProject)getParentComponent()).setStatus("");
    }//GEN-LAST:event_lMerchantIDMouseExited

    private void lMerchantIDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lMerchantIDMouseEntered
        ((NewProject)getParentComponent()).setStatus("Specify the Skipjack Account HTML Processing Serial Number.");
    }//GEN-LAST:event_lMerchantIDMouseEntered

    private void radioCVV2NoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radioCVV2NoMouseExited
        ((NewProject)getParentComponent()).setStatus("");
    }//GEN-LAST:event_radioCVV2NoMouseExited

    private void radioCVV2NoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radioCVV2NoMouseEntered
        ((NewProject)getParentComponent()).setStatus("Select No if Credit Card Verification Code Support (CVV2) is not required.");
    }//GEN-LAST:event_radioCVV2NoMouseEntered

    private void radioCVV2YesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radioCVV2YesMouseExited
        ((NewProject)getParentComponent()).setStatus("");
    }//GEN-LAST:event_radioCVV2YesMouseExited

    private void radioCVV2YesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radioCVV2YesMouseEntered
        ((NewProject)getParentComponent()).setStatus("Select Yes to enable Credit Card Verification Code Support (CVV2).");
    }//GEN-LAST:event_radioCVV2YesMouseEntered

    private void AutoResponderListNameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AutoResponderListNameMouseExited
        ((NewProject)getParentComponent()).setStatus("");
    }//GEN-LAST:event_AutoResponderListNameMouseExited
 
    private void AutoResponderListNameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AutoResponderListNameMouseEntered
        ((NewProject)getParentComponent()).setStatus("Specify the Skipjack Account HTML Processing Serial Number.");
    }//GEN-LAST:event_AutoResponderListNameMouseEntered

    private void CVV2BranchImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CVV2BranchImageMouseClicked

    }//GEN-LAST:event_CVV2BranchImageMouseClicked

    private void radioCVV2NoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioCVV2NoActionPerformed
                   radioCVV2Yes.setSelected(false); 
                   radioCVV2No.setSelected(true); 
                   getDataUpdate();
                   setProjectData();
    }//GEN-LAST:event_radioCVV2NoActionPerformed

    private void radioCVV2YesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioCVV2YesActionPerformed
                   radioCVV2Yes.setSelected(true);  
                   radioCVV2No.setSelected(false); 
                   getDataUpdate();     
                   setProjectData();
    }//GEN-LAST:event_radioCVV2YesActionPerformed

    private void PriceBranchImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PriceBranchImageMouseClicked

    }//GEN-LAST:event_PriceBranchImageMouseClicked
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AdTrackerPanel;
    private javax.swing.JPanel AdTrackingYesNoPanel;
    private javax.swing.JPanel AutoResponsePanel;
    private javax.swing.JPanel AutoResponseYesNoPanel;
    private javax.swing.JLabel CVV2BranchImage;
    private javax.swing.JPanel ListNamePanel;
    private javax.swing.JLabel PriceBranchImage;
    private javax.swing.ButtonGroup adTrackingButtonGroup;
    private javax.swing.ButtonGroup followUpMessagesButtonGroup;
    private javax.swing.JLabel lCVVEnabled;
    private javax.swing.JLabel lFiller13;
    private javax.swing.JLabel lFiller14;
    private javax.swing.JLabel lFiller15;
    private javax.swing.JLabel lFiller16;
    private javax.swing.JLabel lFiller17;
    private javax.swing.JLabel lFiller18;
    private javax.swing.JLabel lFiller19;
    private javax.swing.JLabel lFiller2;
    private javax.swing.JLabel lFiller23;
    private javax.swing.JLabel lFiller4;
    private javax.swing.JLabel lMerchantID;
    private javax.swing.JLabel lPrice;
    private javax.swing.JRadioButton radioCVV2No;
    private javax.swing.JRadioButton radioCVV2Yes;
    private javax.swing.JTextField tfMerchantID;
    private javax.swing.JTextField tfPrice;
    // End of variables declaration//GEN-END:variables

    public void getDataUpdate()
    {
        try
        {
            ProjectManager.putTempNoFileWrite("formActionURL", "https://www.skipjackic.com/scripts/evolvcc.dll?Authorize");
            ProjectManager.putTempNoFileWrite("formRequestMethod", "POST");
            ProjectManager.putTempNoFileWrite("paymentSeparateFirstAndLastNameInputsEnabled", "false");    
            ProjectManager.putTempNoFileWrite("paymentFullNameInputEnabled", "true");             
            if(radioCVV2Yes.isSelected()==true)
            {
                ProjectManager.putTempNoFileWrite("paymentCCVerificationCodeEnabled", "true");                  
            }
            else
            {
                ProjectManager.putTempNoFileWrite("paymentCCVerificationCodeEnabled", "false");                
            }
            ProjectManager.putTempNoFileWrite("inputNameMerchant", "Serialnumber");
            ProjectManager.putTempNoFileWrite("inputNameFirstName", "FirstName");
            ProjectManager.putTempNoFileWrite("inputNameLastName", "LastName"); 
            ProjectManager.putTempNoFileWrite("paymentPhoneInputEnabled", "true");
            ProjectManager.putTempNoFileWrite("inputNamePhone", "shipToPhone"); 
            ProjectManager.putTempNoFileWrite("inputNameEMail", "Email");
            ProjectManager.putTempNoFileWrite("inputNameAddress", "Streetaddress"); 
            ProjectManager.putTempNoFileWrite("inputNameCity", "City");
            ProjectManager.putTempNoFileWrite("inputNameState", "State");    
            ProjectManager.putTempNoFileWrite("inputNameZip", "Zipcode");
            ProjectManager.putTempNoFileWrite("inputNameCountry", "Country"); 
            ProjectManager.putTempNoFileWrite("inputNamePaymentMethod", "Cardname");
            ProjectManager.putTempNoFileWrite("paymentCCIsSingleInputEnabled", "true");
            ProjectManager.putTempNoFileWrite("inputNameCC1", "Accountnumber");                  
            ProjectManager.putTempNoFileWrite("inputNameCC2", "");
            ProjectManager.putTempNoFileWrite("inputNameCC3", ""); 
            ProjectManager.putTempNoFileWrite("inputNameCC4", "");
            ProjectManager.putTempNoFileWrite("inputNameVerificationCode", "cvv2"); 
            ProjectManager.putTempNoFileWrite("inputNameExpirationMonth", "Month");
            ProjectManager.putTempNoFileWrite("inputNameExpirationYear", "Year"); 
            ProjectManager.putTempNoFileWrite("inputNameMerchant", "Serialnumber");
            ProjectManager.putTempNoFileWrite("inputNameOrderID", "Ordernumber");    
            ProjectManager.putTempNoFileWrite("inputNameNameOnCard", "sjname");
            ProjectManager.putTempNoFileWrite("inputNameResponseURL", "URL"); 
            ProjectManager.putTempNoFileWrite("responseURLValue", "");     
            ProjectManager.putTempNoFileWrite("respInputAuthResponse", "authresponse");
            ProjectManager.putTempNoFileWrite("inputNameTotal", "Transactionamount");
            ProjectManager.putTempNoFileWrite("respInputEmail", "Email");
            ProjectManager.putTempNoFileWrite("respInputTotal", "Transactionamount");
            ProjectManager.putTempNoFileWrite("respInputOrderID", "OrderID");
            ProjectManager.putTempNoFileWrite("respInputNameonCard", "sjname");
            ProjectManager.putTempNoFileWrite("respInputCardStreet", "Streetaddress");
            ProjectManager.putTempNoFileWrite("respInputCardCity", "City");
            ProjectManager.putTempNoFileWrite("respInputCardState", "State");
            ProjectManager.putTempNoFileWrite("respInputCardZip", "Zipcode");
            ProjectManager.putTempNoFileWrite("respInputCardCountry", "Country");
            ProjectManager.putTempNoFileWrite("respInputCardnumber", "Accountnumber");
            ProjectManager.putTempNoFileWrite("respInputCardName", "Cardname");
            ProjectManager.putTempNoFileWrite("orderIDLeadingID", "777");
            ProjectManager.putTempNoFileWrite("product_price", tfPrice.getText());    
            ProjectManager.putTempNoFileWrite("merchantValue", tfMerchantID.getText());
            ProjectManager.putTempNoFileWrite("responseURLValue", ""); 
            ProjectManager.putTempNoFileWrite("paymentInputHiddenNames", "Orderstring");
            ProjectManager.putTempNoFileWrite("paymentInputHiddenValues", "1~1~" + tfPrice.getText() + "~1~N~||");               
            ProjectManager.putTempNoFileWrite("paymentResponseInputStatusSuccess", "szReturnCode=1"); 
            ProjectManager.putTempNoFileWrite("paymentResponseStatDeclined1=szReturnCode", "-35");
            ProjectManager.putTempNoFileWrite("paymentResponseStatDeclined2=szReturnCode", "-37");
            ProjectManager.putTempNoFileWrite("paymentResponseStatDeclined3=szReturnCode", "-51");
            ProjectManager.putTempNoFileWrite("paymentResponseStatDeclined4=szReturnCode", "-53");
            ProjectManager.putTempNoFileWrite("paymentResponseStatDeclined5=szReturnCode", "-55");
            ProjectManager.putTempNoFileWrite("paymentResponseStatDeclined6=szReturnCode", "-60");
            ProjectManager.putTempNoFileWrite("paymentResponseStatDeclined7=szReturnCode", "-64");
            ProjectManager.putTempNoFileWrite("paymentResponseStatTotalMessages", "7");
            ProjectManager.putTempNoFileWrite("paymentResponseMsgDeclined1", "Invalid credit card number");
            ProjectManager.putTempNoFileWrite("paymentResponseMsgDeclined2", "Error failed communication");
            ProjectManager.putTempNoFileWrite("paymentResponseMsgDeclined3", "Invalid zip code");
            ProjectManager.putTempNoFileWrite("paymentResponseMsgDeclined4", "Invalid expiration date");
            ProjectManager.putTempNoFileWrite("paymentResponseMsgDeclined5", "Invalid street address");
            ProjectManager.putTempNoFileWrite("paymentResponseMsgDeclined6", "Invalid state");
            ProjectManager.putTempNoFileWrite("paymentResponseMsgDeclined7", "Invalid phone number");
            ProjectManager.putTempNoFileWrite("buyNowActionType", "1");   
            ProjectManager.putTempNoFileWrite("buyNowAction", "com.trinity.ea.actions.BuyNowAction");            
            ProjectManager.saveTempNow(); 
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }

    public void setProjectData()
    {
        try
        {
            if(ProjectManager.get("paymentCCVerificationCodeEnabled")!=null)
            {
                if(ProjectManager.get("paymentCCVerificationCodeEnabled").equalsIgnoreCase("true")==true)
                {               
                    radioCVV2Yes.setSelected(true);
                    radioCVV2No.setSelected(false);                   
                }
                else
                {
                    radioCVV2Yes.setSelected(false);
                    radioCVV2No.setSelected(true);                      
                }
            }
            else
            {
                radioCVV2Yes.setSelected(false);
                radioCVV2No.setSelected(true);
            }
            
            if(ProjectManager.get("merchantValue")!=null)
            {
                if(ProjectManager.get("merchantValue").equalsIgnoreCase("")==false)
                {               
                    tfMerchantID.setText(ProjectManager.get("merchantValue"));               
                }
                else
                {
                    tfMerchantID.setText("");                  
                }
            }
            else
            {
                tfMerchantID.setText(""); 
            }           
            
            if(ProjectManager.get("product_price")!=null)
            {
                if(ProjectManager.get("product_price").equalsIgnoreCase("")==false)
                {               
                    tfPrice.setText(ProjectManager.get("product_price"));               
                }
                else
                {
                    tfPrice.setText("0.00");                  
                }
            }
            else
            {
                tfPrice.setText("0.00"); 
            } 
 	}
        catch(Exception e)
        {
             e.printStackTrace();
        }
    }

    private static Object[] getStringArraysFromString(String textArrayString)
    {
        ArrayList aryList = new ArrayList();
        String tempString = "";
        try
        {
            while(textArrayString.indexOf(",")!=-1)
            {
                tempString = textArrayString.substring(0,textArrayString.indexOf(","));
                textArrayString = textArrayString.substring(textArrayString.indexOf(",") + 1);
                aryList.add(tempString);
            }
            aryList.add(textArrayString);
            aryList.trimToSize();
        }
        catch(NullPointerException e)
        {
         
        }

        return aryList.toArray();
    }  
    
    private String getCommaSeparatedStringValues(String strToUpdate)
    {
	 return strToUpdate.replaceAll(":::",",");
    }   
    
}
