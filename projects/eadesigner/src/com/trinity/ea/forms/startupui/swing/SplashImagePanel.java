/*
 * SplashImagePanel.java
 *
 * Created on June 3, 2004, 12:07 PM
 */

package com.trinity.ea.forms.startupui.swing;
import com.trinity.ea.rules.reader.EncryptedRuleReader;
import javax.swing.ImageIcon;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Color;
import javax.swing.JLabel;
import javax.swing.JPanel;
import java.awt.ComponentOrientation;

/**
 *
 * @author  aaronsc Trinity Software
 * Copyright Â©2003-2004 Trinity Software. All rights reserved.
 */
public class SplashImagePanel extends javax.swing.JPanel {
    private ImageIcon theImageRef = null;
    /** Creates new form SplashImagePanel */
    public SplashImagePanel() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        ImageLabel = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

if(EncryptedRuleReader.get("splashImgPath")!=null)
{
	if(EncryptedRuleReader.get("splashImgPath").equalsIgnoreCase("")==false)
	{
		try
		{
			theImageRef = new javax.swing.ImageIcon(EncryptedRuleReader.getImage(getClass().getResource(EncryptedRuleReader.get("splashImgPath"))));
			ImageLabel.setIcon(theImageRef);
			ImageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		}
		catch(Exception e)
		{
			e.printStackTrace();
      	      ImageLabel.setText(EncryptedRuleReader.getLocaleString("imageMissingText"));
        		ImageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		}
      	ImageLabel.setText("");
	}
	else
	{
            ImageLabel.setText(EncryptedRuleReader.getLocaleString("imageMissingText"));
        	ImageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
	}
}
else
{
            ImageLabel.setText(EncryptedRuleReader.getLocaleString("imageMissingText"));
        	ImageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
}
        add(ImageLabel, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents
    public int getImageHeight()
    {
        return ImageLabel.getIcon().getIconHeight();
    }

    public int getImageWidth()
    {
        return ImageLabel.getIcon().getIconWidth(); 
    }    
    
    public void setOverideDefaultPanelSize(int width, int height)
    {
        setMaximumSize(new java.awt.Dimension(width, height));
        setMinimumSize(new java.awt.Dimension(width, height));
        setPreferredSize(new java.awt.Dimension(width, height));       
    }
    
    public void setBackgroundColor(Color BGColor)
    {
         setBackground(BGColor);
         ImageLabel.setBackground(BGColor);       
    }
    
/*
    public void setComponentOrientation(ComponentOrientation theOrientation)
    {
        ImageLabel.setComponentOrientation(theOrientation);
    }
*/    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ImageLabel;
    // End of variables declaration//GEN-END:variables
    
}
