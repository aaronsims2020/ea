/*
 * PaymentProcessingDialog.java
 *
 * Created on October 27, 2003, 11:22 PM
 */

package com.trinity.ea.forms.payment;
import com.trinity.ea.forms.payment.SecureOrderInformationPanel;
import com.trinity.ea.forms.payment.CustomerBillingInformationPanel;
import com.trinity.ea.forms.payment.SecondaryPaymentMethodPanel;
import com.trinity.ea.rules.reader.EncryptedRuleReader;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import com.trinity.ea.forms.gui.swing.ImageBackgroundBorder;
import javax.swing.border.Border;
import java.net.URL;
import java.net.MalformedURLException;
import javax.imageio.*;
import java.util.ArrayList;
import java.awt.Graphics2D;
import java.awt.Graphics;
import java.awt.RenderingHints;  
import java.io.ByteArrayInputStream;


/**
 *
 * @author  aaronsc Trinity Software
 * Copyright Â©2003-2004 Trinity Software. All rights reserved.
 */
public class PaymentProcessingDialog extends javax.swing.JDialog {
    private int btnHeight = 34;
    /** Creates new form PaymentProcessingDialog */
    public PaymentProcessingDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        // Get the size of the screen
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();

        // Determine the new location of the window
        int w = getSize().width;
        int h = getSize().height;
        int x = (dim.width-w)/2;
        int y = (dim.height-h)/2;
        setResizable(false);
        // Move the window
        setLocation(x, y);
         try
        {
            setTitle(EncryptedRuleReader.getLocaleString("paymentWindowTitle"));
	  if(EncryptedRuleReader.get("paymentBackgroundColor")!=null)
	  {
		if(EncryptedRuleReader.get("paymentBackgroundColor").equalsIgnoreCase("")==false)
		{
			Object[] tmpArray = getStringArraysFromString(EncryptedRuleReader.get("paymentBackgroundColor"));
			CustomerBillingInformationPanel1.setBackground(new java.awt.Color(new Integer((String)tmpArray[0]).intValue(),new Integer((String)tmpArray[1]).intValue(),new Integer((String)tmpArray[2]).intValue()));
		}
	  }
        }
        catch(Exception e)
{

}   
   	try
	{
	  	  applyComponentOrientation(ComponentOrientation.getOrientation(EncryptedRuleReader.getLocale()));
	}
	catch(Exception e)
	{
		e.printStackTrace();
	} 
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        SecureOrderScrollPane = new javax.swing.JScrollPane();
        RootPanel = new javax.swing.JPanel();
        CustomerBillingInformationPanel1 = new com.trinity.ea.forms.payment.CustomerBillingInformationPanel();
        SecureOrderInformationPanel1 = new com.trinity.ea.forms.payment.SecureOrderInformationPanel();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Secure Order");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        //RootPanel.setLayout(new java.awt.BorderLayout());
	  RootPanel.setLayout(new javax.swing.BoxLayout(RootPanel, javax.swing.BoxLayout.Y_AXIS));

        CustomerBillingInformationPanel1.setLayout(null);
if(EncryptedRuleReader.get("paymentPhoneInputEnabled")!=null)
{
	if(EncryptedRuleReader.get("paymentPhoneInputEnabled").equalsIgnoreCase("true")==true)
	{
        CustomerBillingInformationPanel1.setPreferredSize(new java.awt.Dimension(555, 440));
	}
	else
	{
          CustomerBillingInformationPanel1.setPreferredSize(new java.awt.Dimension(555, 410));
	}
}
else
{
    CustomerBillingInformationPanel1.setPreferredSize(new java.awt.Dimension(555, 410));
}

	try
	{ 
if(EncryptedRuleReader.getLocaleString("paymentFormInputBackgroundImagePath")!=null)
{
 	if(EncryptedRuleReader.getLocaleString("paymentFormInputBackgroundImagePath").equalsIgnoreCase("")==false)
	{
	try
	{
        final Border bkgrnd = new ImageBackgroundBorder(ImageIO.read(new ByteArrayInputStream(EncryptedRuleReader.getImage(getClass().getResource(EncryptedRuleReader.getLocaleString("paymentFormInputBackgroundImagePath"))))));
	  if(bkgrnd!=null)
	  {
        Runnable r = new Runnable() {
            public void run() {
                		CustomerBillingInformationPanel1.setBorder(bkgrnd);
                		CustomerBillingInformationPanel1.repaint();
            }
        };
        SwingUtilities.invokeLater(r);
	  }
	}
	catch(Exception e)
	{

	}
	}
}
	}
	catch(Exception e)
	{
		//e.printStackTrace();
	}
        SecureOrderInformationPanel1.setLayout(null);

      if(EncryptedRuleReader.getLocaleString("paymentFormLeftTopImagePath")!=null)
      {
      	if(EncryptedRuleReader.getLocaleString("paymentFormLeftTopImagePath").equalsIgnoreCase("")==false)
      	{		
        		SecureOrderInformationPanel1.setPreferredSize(new java.awt.Dimension(555, 110));
		}
		else
		{
        		SecureOrderInformationPanel1.setPreferredSize(new java.awt.Dimension(555, 90));

		}
	}
	else
	{
        	SecureOrderInformationPanel1.setPreferredSize(new java.awt.Dimension(555, 90));
	}
        //RootPanel.add(SecureOrderInformationPanel1, java.awt.BorderLayout.NORTH);
        RootPanel.add(SecureOrderInformationPanel1);
	  RootPanel.add(CustomerBillingInformationPanel1);
	  if(EncryptedRuleReader.get("secondaryPaymentMethodEnabled")!=null)
	  {
		if(EncryptedRuleReader.get("secondaryPaymentMethodEnabled").equalsIgnoreCase("true")==true)
		{
			SecondaryPaymentMethodPanel1 = new SecondaryPaymentMethodPanel();
        		SecondaryPaymentMethodPanel1.setLayout(null);
	  if(EncryptedRuleReader.get("paymentImgSecondaryButtonHeight")!=null)
	  {
	  	if(EncryptedRuleReader.get("paymentImgSecondaryButtonHeight").equalsIgnoreCase("")==false)
	  	{
			try
			{
				btnHeight = new Integer(EncryptedRuleReader.get("paymentImgSecondaryButtonHeight")).intValue() + 7;
			}
			catch(Exception eee)
			{
				//eee.printStackTrace();
				btnHeight = 34;
			}
		}
		else
		{
			btnHeight = 34;
		}
	  }
	  else
	  {
		btnHeight = 34;
	  }	
        		SecondaryPaymentMethodPanel1.setPreferredSize(new java.awt.Dimension(555, btnHeight));
			try
			{ 
if(EncryptedRuleReader.getLocaleString("paymentImgSecondaryButtonFace")!=null)
{
 	if(EncryptedRuleReader.getLocaleString("paymentImgSecondaryButtonFace").equalsIgnoreCase("")==false)
	{
/*
       			final Border bkgrnd = new ImageBackgroundBorder(ImageIO.read(new ByteArrayInputStream(EncryptedRuleReader.getImage(getClass().getResource(EncryptedRuleReader.getLocaleString("paymentImgSecondaryButtonFace"))))));
        			Runnable r = new Runnable() {
            		public void run() {
                		SecondaryPaymentMethodPanel1.setBorder(bkgrnd);
                		SecondaryPaymentMethodPanel1.repaint();
            		}
        			};
        			SwingUtilities.invokeLater(r);
*/
	}
}
				RootPanel.add(SecondaryPaymentMethodPanel1);
			}
			catch(Exception e)
			{
				e.printStackTrace();
			}
		}
	  }

        SecureOrderScrollPane.setViewportView(RootPanel);

        getContentPane().add(SecureOrderScrollPane, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
 
     private static Object[] getStringArraysFromString(String textArrayString)
    {
        ArrayList aryList = new ArrayList();
        String tempString = "";
        
        while(textArrayString.indexOf(",")!=-1)
        {
            tempString = textArrayString.substring(0,textArrayString.indexOf(","));
            textArrayString = textArrayString.substring(textArrayString.indexOf(",") + 1);
            aryList.add(tempString);
        }
        aryList.add(textArrayString);
        return aryList.toArray();
    } 
   
    /**
     * @param args the command line arguments
     */
 //   public static void main(String args[]) {
 //       new PaymentProcessingDialog(new javax.swing.JFrame(), true).show();
 //   }

    public void paint(Graphics g)
    {
	Graphics2D g2 = (Graphics2D) g;
	g2.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
	super.paint(g);
    }    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.trinity.ea.forms.payment.CustomerBillingInformationPanel CustomerBillingInformationPanel1;
    private com.trinity.ea.forms.payment.SecondaryPaymentMethodPanel SecondaryPaymentMethodPanel1;
    private javax.swing.JPanel RootPanel;
    private com.trinity.ea.forms.payment.SecureOrderInformationPanel SecureOrderInformationPanel1;
    private javax.swing.JScrollPane SecureOrderScrollPane;
    // End of variables declaration//GEN-END:variables
}
