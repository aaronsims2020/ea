/*
 * EADesignerPaymentsPanel.java
 *
 * Created on December 13, 2003, 1:17 AM
 */

package com.trinity.ea.design.payments;
import javax.swing.*;
import java.awt.*;
import com.trinity.ea.design.common.panel.EAPanel;
import com.trinity.ea.design.payments.uistrings.PaymentUIStringsPanel;
import com.trinity.ea.design.payments.inputs.PaymentHTMLFormInputs;
import com.trinity.ea.design.payments.actions.PaymentActionsPanel;
import com.trinity.ea.design.payments.options.PaymentOptionsPanel;
import com.trinity.ea.design.common.sidebar.SBTab;
import com.trinity.ea.design.project.EADesignerProjectPanel;
import com.trinity.ea.design.common.sidebar.SBSpacer;
import com.trinity.ea.design.rules.builder.DesignerRuleBuilder;
//import com.trinity.ea.design.common.status.ProgressWindow;
import java.awt.Font;
import java.util.HashMap;
import java.util.Collections;
import java.util.Map;
import java.util.ArrayList;
import com.trinity.ea.design.common.borderline.ContentAreaHeaderPanel;

/**
 *
 * @author  aaronsc Trinity Software
 * Copyright ©2003-2004 Trinity Software. All rights reserved.
 */
public class EADesignerPaymentsPanel_bak extends EAPanel {
Map sbMap = Collections.synchronizedMap(new HashMap());    
    
    /** Creates new form EADesignerProjectPanel */
    public EADesignerPaymentsPanel_bak() {
	//ProgressWindow progWindow = new ProgressWindow();
	//try
	//{
	 // progWindow.showStatus("Launching Payments Designer", 1);
        initComponents();
	  initSidebar();
	  setSelectedMenuItem(PaymentMenuLabelConfigButton);
	//  progWindow.close();
	//}
	//catch(Exception e)
	//{
	//	e.printStackTrace();
	//	progWindow.close();
	//}
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        PaymentsContentTopPanel = new javax.swing.JPanel();
        OptinCentralContentPanel = new javax.swing.JPanel();
        OptinContentPanel = new javax.swing.JPanel();
        OptinContentPanelItem1 = new javax.swing.JPanel();
        EMailOptinSettingsPanelItem1 = new javax.swing.JPanel();
        EMailOptinEnabledPanel = new javax.swing.JPanel();
        cbOptinEnabled = new javax.swing.JCheckBox();
        EMailOptinPanelMainContainer = new javax.swing.JPanel();
        btnEMailOptinFormAutomaticConfiguration = new javax.swing.JButton();
        btnEMailOptinFormPreview = new javax.swing.JButton();
        OptinSettingsPanelItem7 = new javax.swing.JPanel();
        OptinContentPanelItem2 = new javax.swing.JPanel();
        OptinSettingsPanelItem3 = new javax.swing.JPanel();
        OptinTitlePanel2 = new javax.swing.JPanel();
        lEMailOptinFormActionURL = new javax.swing.JLabel();
        tfEMailOptinFormActionURL = new javax.swing.JTextField();
        OptinTitleRightPanel2 = new javax.swing.JPanel();
        OptinSettingsPanelItem4 = new javax.swing.JPanel();
        OptinTitlePanel3 = new javax.swing.JPanel();
        optinRequestMethodLabel = new javax.swing.JLabel();
        optinRadioPostRequestMethod = new javax.swing.JRadioButton();
        optinRadioGetRequestMethod = new javax.swing.JRadioButton();
        OptinPrivacyPolicyPanel = new javax.swing.JPanel();
        cbEnablePrivacyPolicy = new javax.swing.JCheckBox();
        OptinCentralContentLeftMarginPanel = new javax.swing.JPanel();
        OptinCentralContentRightMarginPanel = new javax.swing.JPanel();
        PaymentsContentBottomPanel = new javax.swing.JPanel();
        ProjectMenuPanel = new javax.swing.JPanel();
        LeftMenuPanelBottomPanel = new javax.swing.JPanel();
        ProjectMenuButtonPanel = new javax.swing.JPanel();
        PaymentMenuLabelConfigButton = new SBTab("Properties",sbTabWidth, sbTabHeight, sbTabLeftMargin, theCurrentMenuColor, theTextMenuColor, arrowIcon, iconTextGap, sbTabTopBorderColor, sbTabBottomBorderColor, sbTabRightInnerBorderColor, sbTabRightOuterBorderColor, sbTabIsOpaque);
        PaymentMenuLabelActionsButton = new SBTab("Actions",sbTabWidth, sbTabHeight, sbTabLeftMargin, theCurrentMenuColor, theTextMenuColor, arrowIcon, iconTextGap, sbTabTopBorderColor, sbTabBottomBorderColor, sbTabRightInnerBorderColor, sbTabRightOuterBorderColor, sbTabIsOpaque);
        PaymentMenuLabelHTMLFormInputsButton = new SBTab("HTML Form Inputs",sbTabWidth, sbTabHeight, sbTabLeftMargin, theCurrentMenuColor, theTextMenuColor, arrowIcon, iconTextGap, sbTabTopBorderColor, sbTabBottomBorderColor, sbTabRightInnerBorderColor, sbTabRightOuterBorderColor, sbTabIsOpaque);
        PaymentMenuLabelUIStringsButton = new SBTab("UI Strings",sbTabWidth, sbTabHeight, sbTabLeftMargin, theCurrentMenuColor, theTextMenuColor, arrowIcon, iconTextGap, sbTabTopBorderColor, sbTabBottomBorderColor, sbTabRightInnerBorderColor, sbTabRightOuterBorderColor, sbTabIsOpaque);
        ProjectMenuButtonPanelTop = new SBTab(null,sbTabWidth, sbTabMenuTopSpaceFiller, sbTabLeftMargin, theCurrentMenuColor, theTextMenuColor, null, iconTextGap, theCurrentMenuColor, sbTabBottomBorderColor, sbTabRightInnerBorderColor, sbTabRightOuterBorderColor, sbTabIsOpaque);
        ProjectMenuButtonPanelBottom = new SBSpacer(theCurrentMenuColor,sbTabTopBorderColor,theCurrentMenuColor,sbTabRightInnerBorderColor,sbTabRightOuterBorderColor,sbTabIsOpaque);
        PaymentsMenuLeftSpaceFiller = new javax.swing.JPanel();
        ProjectSelectionContentPanel = new javax.swing.JPanel();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        setBackground(new java.awt.Color(100, 120, 170));
        PaymentsContentTopPanel.setLayout(new java.awt.BorderLayout());

        PaymentsContentTopPanel.setBackground(new java.awt.Color(100, 120, 170));
        PaymentsContentTopPanel.setMaximumSize(new java.awt.Dimension(2147483647, 170));
        PaymentsContentTopPanel.setPreferredSize(new java.awt.Dimension(620, 170));
        OptinCentralContentPanel.setLayout(new java.awt.BorderLayout());

        OptinCentralContentPanel.setBackground(new java.awt.Color(100, 120, 170));
        OptinCentralContentPanel.setMaximumSize(new java.awt.Dimension(2147483647, 120));
        OptinContentPanel.setLayout(new javax.swing.BoxLayout(OptinContentPanel, javax.swing.BoxLayout.Y_AXIS));

        OptinContentPanel.setBackground(new java.awt.Color(100, 120, 170));
        OptinContentPanel.setMaximumSize(new java.awt.Dimension(2147483647, 120));
        OptinContentPanel.setMinimumSize(new java.awt.Dimension(448, 0));
        OptinContentPanel.setPreferredSize(new java.awt.Dimension(600, 120));
        OptinContentPanelItem1.setLayout(new javax.swing.BoxLayout(OptinContentPanelItem1, javax.swing.BoxLayout.Y_AXIS));

        OptinContentPanelItem1.setBackground(new java.awt.Color(100, 120, 170));
        OptinContentPanelItem1.setBorder(new javax.swing.border.TitledBorder(new javax.swing.border.EtchedBorder(new java.awt.Color(140, 171, 240), new java.awt.Color(27, 44, 76)), "Payment Processing", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12)));
        OptinContentPanelItem1.setMaximumSize(new java.awt.Dimension(2147483647, 60));
        EMailOptinSettingsPanelItem1.setLayout(new java.awt.BorderLayout());

        EMailOptinSettingsPanelItem1.setBackground(new java.awt.Color(100, 120, 170));
        EMailOptinEnabledPanel.setLayout(new java.awt.BorderLayout(15, 5));

        EMailOptinEnabledPanel.setBackground(new java.awt.Color(100, 120, 170));
        EMailOptinEnabledPanel.setMaximumSize(new java.awt.Dimension(100, 2147483647));
        cbOptinEnabled.setBackground(new java.awt.Color(100, 120, 170));
        cbOptinEnabled.setFont(new java.awt.Font("Arial", 0, 12));
        cbOptinEnabled.setSelected(true);
        cbOptinEnabled.setText("Enable Payment Procesing Support");
        EMailOptinEnabledPanel.add(cbOptinEnabled, java.awt.BorderLayout.CENTER);

        EMailOptinSettingsPanelItem1.add(EMailOptinEnabledPanel, java.awt.BorderLayout.WEST);

        EMailOptinPanelMainContainer.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 0));

        EMailOptinPanelMainContainer.setBackground(new java.awt.Color(100, 120, 170));
        btnEMailOptinFormAutomaticConfiguration.setFont(new java.awt.Font("Arial", 0, 12));
        btnEMailOptinFormAutomaticConfiguration.setText("Automatic Configuration");
        EMailOptinPanelMainContainer.add(btnEMailOptinFormAutomaticConfiguration);

        btnEMailOptinFormPreview.setFont(new java.awt.Font("Arial", 0, 12));
        btnEMailOptinFormPreview.setText("Preview");
        EMailOptinPanelMainContainer.add(btnEMailOptinFormPreview);

        EMailOptinSettingsPanelItem1.add(EMailOptinPanelMainContainer, java.awt.BorderLayout.CENTER);

        OptinContentPanelItem1.add(EMailOptinSettingsPanelItem1);

        OptinSettingsPanelItem7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        OptinSettingsPanelItem7.setBackground(new java.awt.Color(100, 120, 170));
        OptinContentPanelItem1.add(OptinSettingsPanelItem7);

        OptinContentPanel.add(OptinContentPanelItem1);

        OptinContentPanelItem2.setLayout(new javax.swing.BoxLayout(OptinContentPanelItem2, javax.swing.BoxLayout.Y_AXIS));

        OptinContentPanelItem2.setBackground(new java.awt.Color(100, 120, 170));
        OptinContentPanelItem2.setBorder(new javax.swing.border.TitledBorder(new javax.swing.border.EtchedBorder(new java.awt.Color(140, 171, 240), new java.awt.Color(27, 44, 76)), "Properties", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12)));
        OptinContentPanelItem2.setMaximumSize(new java.awt.Dimension(1400, 100));
        OptinContentPanelItem2.setMinimumSize(new java.awt.Dimension(60, 100));
        OptinContentPanelItem2.setPreferredSize(new java.awt.Dimension(600, 100));
        OptinSettingsPanelItem3.setLayout(new java.awt.BorderLayout());

        OptinSettingsPanelItem3.setBackground(new java.awt.Color(100, 120, 170));
        OptinSettingsPanelItem3.setMaximumSize(new java.awt.Dimension(32767, 33));
        OptinTitlePanel2.setBackground(new java.awt.Color(100, 120, 170));
        OptinTitlePanel2.setMaximumSize(new java.awt.Dimension(100, 2147483647));
        lEMailOptinFormActionURL.setBackground(new java.awt.Color(100, 120, 170));
        lEMailOptinFormActionURL.setFont(new java.awt.Font("Arial", 0, 12));
        lEMailOptinFormActionURL.setText("HTML Form Action URL:");
        OptinTitlePanel2.add(lEMailOptinFormActionURL);

        tfEMailOptinFormActionURL.setText("http://...");
        tfEMailOptinFormActionURL.setPreferredSize(new java.awt.Dimension(220, 19));
        OptinTitlePanel2.add(tfEMailOptinFormActionURL);

        OptinSettingsPanelItem3.add(OptinTitlePanel2, java.awt.BorderLayout.WEST);

        OptinTitleRightPanel2.setLayout(new javax.swing.BoxLayout(OptinTitleRightPanel2, javax.swing.BoxLayout.Y_AXIS));

        OptinTitleRightPanel2.setBackground(new java.awt.Color(100, 120, 170));
        OptinSettingsPanelItem3.add(OptinTitleRightPanel2, java.awt.BorderLayout.CENTER);

        OptinContentPanelItem2.add(OptinSettingsPanelItem3);

        OptinSettingsPanelItem4.setLayout(new java.awt.BorderLayout());

        OptinSettingsPanelItem4.setBackground(new java.awt.Color(100, 120, 170));
        OptinSettingsPanelItem4.setMaximumSize(new java.awt.Dimension(32767, 33));
        OptinTitlePanel3.setBackground(new java.awt.Color(100, 120, 170));
        OptinTitlePanel3.setMaximumSize(new java.awt.Dimension(100, 2147483647));
        optinRequestMethodLabel.setBackground(new java.awt.Color(100, 120, 170));
        optinRequestMethodLabel.setFont(new java.awt.Font("Arial", 0, 12));
        optinRequestMethodLabel.setText("HTTP Request Method:");
        OptinTitlePanel3.add(optinRequestMethodLabel);

        optinRadioPostRequestMethod.setBackground(new java.awt.Color(100, 120, 170));
        optinRadioPostRequestMethod.setFont(new java.awt.Font("Arial", 1, 12));
        optinRadioPostRequestMethod.setText("GET");
        OptinTitlePanel3.add(optinRadioPostRequestMethod);

        optinRadioGetRequestMethod.setBackground(new java.awt.Color(100, 120, 170));
        optinRadioGetRequestMethod.setFont(new java.awt.Font("Arial", 1, 12));
        optinRadioGetRequestMethod.setSelected(true);
        optinRadioGetRequestMethod.setText("POST");
        OptinTitlePanel3.add(optinRadioGetRequestMethod);

        OptinSettingsPanelItem4.add(OptinTitlePanel3, java.awt.BorderLayout.WEST);

        OptinPrivacyPolicyPanel.setBackground(new java.awt.Color(100, 120, 170));
        OptinPrivacyPolicyPanel.setMaximumSize(new java.awt.Dimension(100, 2147483647));
        cbEnablePrivacyPolicy.setBackground(new java.awt.Color(100, 120, 170));
        cbEnablePrivacyPolicy.setFont(new java.awt.Font("Arial", 0, 12));
        cbEnablePrivacyPolicy.setSelected(true);
        cbEnablePrivacyPolicy.setText("Enable Refund Policy Support ");
        OptinPrivacyPolicyPanel.add(cbEnablePrivacyPolicy);

        OptinSettingsPanelItem4.add(OptinPrivacyPolicyPanel, java.awt.BorderLayout.CENTER);

        OptinContentPanelItem2.add(OptinSettingsPanelItem4);

        OptinContentPanel.add(OptinContentPanelItem2);

        OptinCentralContentPanel.add(OptinContentPanel, java.awt.BorderLayout.CENTER);

        OptinCentralContentLeftMarginPanel.setBackground(new java.awt.Color(100, 120, 170));
	  OptinCentralContentLeftMarginPanel.setMaximumSize(new java.awt.Dimension(1, 200));

        OptinCentralContentPanel.add(OptinCentralContentLeftMarginPanel, java.awt.BorderLayout.WEST);

        OptinCentralContentRightMarginPanel.setBackground(new java.awt.Color(100, 120, 170));
        OptinCentralContentPanel.add(OptinCentralContentRightMarginPanel, java.awt.BorderLayout.EAST);

        PaymentsContentTopPanel.add(OptinCentralContentPanel, java.awt.BorderLayout.CENTER);

        add(PaymentsContentTopPanel);

        PaymentsContentBottomPanel.setLayout(new java.awt.BorderLayout());

        PaymentsContentBottomPanel.setBackground(new java.awt.Color(100, 120, 170));
        ProjectMenuPanel.setLayout(new java.awt.BorderLayout());

        ProjectMenuPanel.setBackground(new java.awt.Color(100, 120, 170));
        ProjectMenuPanel.setForeground(new java.awt.Color(255, 255, 255));
        ProjectMenuPanel.setMaximumSize(new java.awt.Dimension(sbTabWidth, 200));
        ProjectMenuPanel.setMinimumSize(new java.awt.Dimension(sbTabWidth, 0));
        ProjectMenuPanel.setPreferredSize(new java.awt.Dimension(sbTabWidth, 150));
        ProjectMenuButtonPanel.setLayout(new javax.swing.BoxLayout(ProjectMenuButtonPanel, javax.swing.BoxLayout.Y_AXIS));

        ProjectMenuButtonPanel.setBackground(new java.awt.Color(100, 120, 170));
        ProjectMenuButtonPanel.setForeground(new java.awt.Color(255, 255, 255));
        ProjectMenuButtonPanel.setMaximumSize(new java.awt.Dimension(sbTabWidth, sbTabGroupHeight));
        ProjectMenuButtonPanel.setMinimumSize(new java.awt.Dimension(sbTabWidth, sbTabGroupHeight));
        ProjectMenuButtonPanel.setPreferredSize(new java.awt.Dimension(sbTabWidth, sbTabGroupHeight));
        LeftMenuPanelBottomPanel.setLayout(new java.awt.BorderLayout());

        LeftMenuPanelBottomPanel.setBackground(new java.awt.Color(39, 63, 109));
        LeftMenuPanelBottomPanel.setForeground(new java.awt.Color(255, 255, 255));
        LeftMenuPanelBottomPanel.setMaximumSize(new java.awt.Dimension(sbTabWidth, 200));
        LeftMenuPanelBottomPanel.setMinimumSize(new java.awt.Dimension(sbTabWidth, 100));
        LeftMenuPanelBottomPanel.setPreferredSize(new java.awt.Dimension(sbTabWidth, 200));
 
       PaymentMenuLabelConfigButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PaymentMenuLabelConfigButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PaymentMenuLabelConfigButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PaymentMenuLabelConfigButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                PaymentMenuLabelConfigButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                PaymentMenuLabelConfigButtonMouseReleased(evt);
            }
        });

        ProjectMenuButtonPanel.add(PaymentMenuLabelConfigButton);

        PaymentMenuLabelActionsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PaymentMenuLabelActionsButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PaymentMenuLabelActionsButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PaymentMenuLabelActionsButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                PaymentMenuLabelActionsButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                PaymentMenuLabelActionsButtonMouseReleased(evt);
            }
        });

        ProjectMenuButtonPanel.add(PaymentMenuLabelActionsButton);

        PaymentMenuLabelHTMLFormInputsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PaymentMenuLabelHTMLFormInputsButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PaymentMenuLabelHTMLFormInputsButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PaymentMenuLabelHTMLFormInputsButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                PaymentMenuLabelHTMLFormInputsButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                PaymentMenuLabelHTMLFormInputsButtonMouseReleased(evt);
            }
        });

        ProjectMenuButtonPanel.add(PaymentMenuLabelHTMLFormInputsButton);

        PaymentMenuLabelUIStringsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PaymentMenuLabelUIStringsButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PaymentMenuLabelUIStringsButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PaymentMenuLabelUIStringsButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                PaymentMenuLabelUIStringsButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                PaymentMenuLabelUIStringsButtonMouseReleased(evt);
            }
        });

        ProjectMenuButtonPanel.add(PaymentMenuLabelUIStringsButton);
/**********************/
        LeftMenuPanelBottomPanel.add(ProjectMenuButtonPanel, java.awt.BorderLayout.NORTH);
        LeftMenuPanelBottomPanel.add(ProjectMenuButtonPanelBottom, java.awt.BorderLayout.CENTER);
        ProjectMenuPanel.add(LeftMenuPanelBottomPanel, java.awt.BorderLayout.CENTER);
        ProjectMenuPanel.add(ProjectMenuButtonPanelTop, java.awt.BorderLayout.NORTH);
        ProjectMenuButtonPanelBottom.setBackground(new java.awt.Color(100, 120, 170));
        ProjectMenuButtonPanelBottom.setForeground(new java.awt.Color(255, 255, 255));
        PaymentsMenuLeftSpaceFiller.setBackground(new java.awt.Color(100, 120, 170));
        PaymentsMenuLeftSpaceFiller.setMinimumSize(new java.awt.Dimension(1, 10));
        PaymentsMenuLeftSpaceFiller.setPreferredSize(new java.awt.Dimension(1, 10));
        ProjectMenuPanel.add(PaymentsMenuLeftSpaceFiller, java.awt.BorderLayout.WEST);
        PaymentsContentBottomPanel.add(ProjectMenuPanel, java.awt.BorderLayout.WEST);
/**********************/
        ProjectSelectionContentPanel.setLayout(new java.awt.BorderLayout());

        ProjectSelectionContentPanel.setBackground(new java.awt.Color(140, 160, 210));
        ProjectSelectionContentPanel.setForeground(new java.awt.Color(255, 255, 255));
        PaymentsContentBottomPanel.add(ProjectSelectionContentPanel, java.awt.BorderLayout.CENTER);

      //  add(PaymentsContentBottomPanel);
// add header here
	  contentPanel = new JPanel();
        contentPanel.setLayout(new java.awt.BorderLayout());
        contentPanel.add(ProjectMenuPanel, java.awt.BorderLayout.WEST);
        contentPanel.add(PaymentsContentBottomPanel, java.awt.BorderLayout.CENTER);
	  contentProjectPanel = new ContentAreaHeaderPanel(contentPanel, sbTabWidth, theCurrentMenuColor, sbTabRightInnerBorderColor,sbTabRightOuterBorderColor,theSelectedMenuColor);

        contentProjectPanel.add(contentPanel, java.awt.BorderLayout.CENTER);
  	  add(contentProjectPanel, java.awt.BorderLayout.CENTER);
  }//GEN-END:initComponents

    private void PaymentMenuLabelUIStringsButtonMouseReleased(java.awt.event.MouseEvent evt) {
	 setMouseReleasedMenuLabel(PaymentMenuLabelUIStringsButton);
    }

    private void PaymentMenuLabelHTMLFormInputsButtonMouseReleased(java.awt.event.MouseEvent evt) {
	 setMouseReleasedMenuLabel(PaymentMenuLabelHTMLFormInputsButton);
    }

    private void PaymentMenuLabelActionsButtonMouseReleased(java.awt.event.MouseEvent evt) {
	 setMouseReleasedMenuLabel(PaymentMenuLabelActionsButton);
    }

    private void PaymentMenuLabelConfigButtonMouseReleased(java.awt.event.MouseEvent evt) {
	 setMouseReleasedMenuLabel(PaymentMenuLabelConfigButton);
    }

    private void PaymentMenuLabelUIStringsButtonMousePressed(java.awt.event.MouseEvent evt) {
        setMousePressedMenuLabel(PaymentMenuLabelUIStringsButton);
    }

    private void PaymentMenuLabelHTMLFormInputsButtonMousePressed(java.awt.event.MouseEvent evt) {
        setMousePressedMenuLabel(PaymentMenuLabelHTMLFormInputsButton);
    }

    private void PaymentMenuLabelActionsButtonMousePressed(java.awt.event.MouseEvent evt) {
        setMousePressedMenuLabel(PaymentMenuLabelActionsButton);
    }

    private void PaymentMenuLabelConfigButtonMousePressed(java.awt.event.MouseEvent evt) {
        setMousePressedMenuLabel(PaymentMenuLabelConfigButton);
    }

    private void PaymentMenuLabelUIStringsButtonMouseExited(java.awt.event.MouseEvent evt) {
        setMouseExitedMenuLabel(PaymentMenuLabelUIStringsButton);
    }

    private void PaymentMenuLabelHTMLFormInputsButtonMouseExited(java.awt.event.MouseEvent evt) {
        setMouseExitedMenuLabel(PaymentMenuLabelHTMLFormInputsButton);
    }

    private void PaymentMenuLabelActionsButtonMouseExited(java.awt.event.MouseEvent evt) {
        setMouseExitedMenuLabel(PaymentMenuLabelActionsButton);
    }

    private void PaymentMenuLabelConfigButtonMouseExited(java.awt.event.MouseEvent evt) {
        setMouseExitedMenuLabel(PaymentMenuLabelConfigButton);
    }

    private void PaymentMenuLabelUIStringsButtonMouseEntered(java.awt.event.MouseEvent evt) {
        setMouseEnteredMenuLabel(PaymentMenuLabelUIStringsButton);
    }

    private void PaymentMenuLabelHTMLFormInputsButtonMouseEntered(java.awt.event.MouseEvent evt) {
        setMouseEnteredMenuLabel(PaymentMenuLabelHTMLFormInputsButton);
    }

    private void PaymentMenuLabelActionsButtonMouseEntered(java.awt.event.MouseEvent evt) {
        setMouseEnteredMenuLabel(PaymentMenuLabelActionsButton);
    }

    private void PaymentMenuLabelConfigButtonMouseEntered(java.awt.event.MouseEvent evt) {
        setMouseEnteredMenuLabel(PaymentMenuLabelConfigButton);
    }

    private void PaymentMenuLabelConfigButtonMouseClicked(java.awt.event.MouseEvent evt) {
 	setSelectedMenuItem(PaymentMenuLabelConfigButton);
    }

    private void PaymentMenuLabelUIStringsButtonMouseClicked(java.awt.event.MouseEvent evt) {
 	setSelectedMenuItem(PaymentMenuLabelUIStringsButton);
    }

    private void PaymentMenuLabelHTMLFormInputsButtonMouseClicked(java.awt.event.MouseEvent evt) {
 	setSelectedMenuItem(PaymentMenuLabelHTMLFormInputsButton);
    }

    private void PaymentMenuLabelActionsButtonMouseClicked(java.awt.event.MouseEvent evt) {
 	setSelectedMenuItem(PaymentMenuLabelActionsButton);
    }
 private Color theCurrentMenuColor = new Color(100, 120, 170);
 private Color theSelectedMenuColor = new Color(140,160,210);
 private Color theTextMenuColor = new Color(255, 255, 255);
 private boolean pressedSelected = false;
 private Icon arrowIcon = new javax.swing.ImageIcon(getClass().getResource("/images/arrow.gif"));
 private Icon arrowSelectedIcon = new javax.swing.ImageIcon(getClass().getResource("/images/arrow_selected.gif"));
 private Icon arrowMouseOverIcon = new javax.swing.ImageIcon(getClass().getResource("/images/arrow_mouseover.gif"));  
 private int iconTextGap = 5;
 private int sbTabMenuTopSpaceFiller = 15;
 private int sbTabLeftMargin = 5;
 private int sbTabWidth = 130;
 private int sbTabHeight = 25;
 private int sbTabGroupHeight = 100;
 private boolean sbTabIsOpaque=true;
 private Color sbTabTopBorderColor = new Color(140, 171, 240);
 private Color sbTabBottomBorderColor = new Color(70, 82, 116);
 private Color sbTabTopSelectedBorderColor = new Color(96, 110, 145);
 private Color sbTabBottomSelectedBorderColor = new Color(198, 226, 253);
 private Color sbTabRightInnerBorderColor = new java.awt.Color(68, 76, 100);
 private Color sbTabRightOuterBorderColor = new java.awt.Color(100, 114, 149);
 private Font sbTabFont = new java.awt.Font("Arial", 1, 12);
 private SBTab TheMenuLabelReference = new SBTab(null,sbTabWidth, sbTabHeight, sbTabLeftMargin, theCurrentMenuColor, theTextMenuColor, arrowIcon, iconTextGap, sbTabTopBorderColor, sbTabBottomBorderColor, sbTabRightInnerBorderColor, sbTabRightOuterBorderColor, sbTabIsOpaque);
 private SBTab thePressedLabelReference = null;
 private SBTab theEnteredLabelReference = null;

 private void setSelectedMenuItem(SBTab theMenuLabel)
  {
    try
    {
        TheMenuLabelReference.setBackgroundColor(theCurrentMenuColor);
	  TheMenuLabelReference.setTheTopBottomBorderColors(sbTabTopBorderColor, sbTabBottomBorderColor, sbTabRightInnerBorderColor, sbTabRightOuterBorderColor);
        TheMenuLabelReference.setTheIcon(arrowIcon);
        theMenuLabel.setBackgroundColor(theSelectedMenuColor);
        theMenuLabel.setTheIcon(arrowSelectedIcon);
	  theMenuLabel.setTheTopBottomBorderColors(sbTabTopSelectedBorderColor, sbTabBottomSelectedBorderColor, theSelectedMenuColor, theSelectedMenuColor);
        TheMenuLabelReference = theMenuLabel;

                        try
                        {
                            setContentPanel((EAPanel)Class.forName(getSidebarComponentID(theMenuLabel.getComponentLocalizationID())).newInstance());
                        }
                        catch(InstantiationException e)
                        {
                            e.printStackTrace();
                        }   
                        catch(IllegalAccessException e)
                        {
                            e.printStackTrace();
                        }                      
                        catch(ClassNotFoundException e)
                        {
                            e.printStackTrace();
                        }   
    }
    catch(Exception e)
    {
	e.printStackTrace();
    }
  }    
 
 private void setMouseEnteredMenuLabel(SBTab theEnteredLabel)
 {
    try
    {
        theEnteredLabelReference = theEnteredLabel;
        if(theEnteredLabel.equals(TheMenuLabelReference)==false)
        {
            theEnteredLabel.setTheIcon(arrowMouseOverIcon);
            if(pressedSelected==true)
            {
                
                TheMenuLabelReference.setForegroundColor(theTextMenuColor);
            }
        }
        else
        {
            if(pressedSelected==true)
            {
                TheMenuLabelReference.setForegroundColor(theSelectedMenuColor);    
            }
        }
    }
    catch(Exception e)
    {
        System.out.println(e);
    }     
 }
 private void setMouseExitedMenuLabel(SBTab theExitedLabel)
 {
    try
    {
        if(theExitedLabel.equals(TheMenuLabelReference)==false)
        {
            theExitedLabel.setTheIcon(arrowIcon);   
        }
        else
        {
            theEnteredLabelReference.setForegroundColor(theTextMenuColor);           
        }
    }
    catch(Exception e)
    {
        System.out.println(e);
    }  
 }

  private void setMousePressedMenuLabel(SBTab thePressedLabel)
 {
    try
    {
        thePressedLabelReference = thePressedLabel;
        if(thePressedLabel.equals(TheMenuLabelReference)==false)
        {
            thePressedLabel.setBackgroundColor(theSelectedMenuColor); 
	  	thePressedLabel.setTheTopBottomBorderColors(sbTabTopSelectedBorderColor, sbTabBottomSelectedBorderColor, theSelectedMenuColor, theSelectedMenuColor);
        }
        else
        {
            pressedSelected=true; 
            thePressedLabel.setForegroundColor(theSelectedMenuColor);
        }
    }
    catch(Exception e)
    {
        System.out.println(e);
    }  
 }
 
  private void setMouseReleasedMenuLabel(SBTab theReleasedLabel)
 {
    try
    {
        pressedSelected = false;
        if(theEnteredLabelReference.equals(thePressedLabelReference)==false)
        {
            if(thePressedLabelReference.equals(TheMenuLabelReference)==false)
            {
                thePressedLabelReference.setBackgroundColor(theCurrentMenuColor);
		    thePressedLabelReference.setTheTopBottomBorderColors(sbTabTopBorderColor, sbTabBottomBorderColor, sbTabRightInnerBorderColor, sbTabRightOuterBorderColor);
            }
            if(thePressedLabelReference.equals(TheMenuLabelReference)==true)
            {           
                thePressedLabelReference.setForegroundColor(theTextMenuColor);
            }           
        }
        else
        {
            if(thePressedLabelReference.equals(TheMenuLabelReference)==true)
            {           
                thePressedLabelReference.setForegroundColor(theTextMenuColor);
            }
		else
		{
		    try
		    {
 		        TheMenuLabelReference.setBackgroundColor(theCurrentMenuColor);
			  TheMenuLabelReference.setTheTopBottomBorderColors(sbTabTopBorderColor, sbTabBottomBorderColor, sbTabRightInnerBorderColor, sbTabRightOuterBorderColor);
 		        TheMenuLabelReference.setTheIcon(arrowIcon);
 		        thePressedLabelReference.setTheIcon(arrowSelectedIcon);
 		        TheMenuLabelReference = thePressedLabelReference;
                        try
                        {
                            setContentPanel((EAPanel)Class.forName(getSidebarComponentID(theReleasedLabel.getComponentLocalizationID())).newInstance());
                        }
                        catch(InstantiationException e)
                        {
                            e.printStackTrace();
                        }   
                        catch(IllegalAccessException e)
                        {
                            e.printStackTrace();
                        }                      
                        catch(ClassNotFoundException e)
                        {
                            e.printStackTrace();
                        }   
 		    }
		    catch(Exception e)
		    {
		        System.out.println(e);
		    }
		}
        }
        
    }
    catch(Exception e)
    {
        System.out.println(e);
    }  
 } 
    private static synchronized Object[] getStringArraysFromString(String textArrayString)
    {
        ArrayList aryList = new ArrayList();
        String tempString = "";
        try
        {
            while(textArrayString.indexOf(",")!=-1)
            {
                tempString = textArrayString.substring(0,textArrayString.indexOf(","));
                textArrayString = textArrayString.substring(textArrayString.indexOf(",") + 1);
                aryList.add(tempString);
            }
            aryList.add(textArrayString);
            aryList.trimToSize();
        }
        catch(NullPointerException e)
        {
         
        }

        return aryList.toArray();
    }  

private synchronized String getSidebarComponentID(String compRefID)
{
	try
	{
		return (String)sbMap.get(compRefID);
	}
	catch(Exception e)
	{
	e.printStackTrace();
	}
	return "";
}

private synchronized void initSidebar()
{
try
{
	Object[] sbUIStrings = getStringArraysFromString(DesignerRuleBuilder.get("sbPaymentsStrings"));
	Object[] sbUIActions = getStringArraysFromString(DesignerRuleBuilder.get("sbPaymentsActionPanels"));
//sbMap

                    for(int i = 0;i<sbUIStrings.length;i++)
                    {
                        try
				{
					sbMap.put((String)sbUIStrings[i],(String)sbUIActions[i]);
					//LeftMenuButtonPanel.add(new SBTab((String)sbUIStrings[i],sbTabWidth, sbTabHeight, sbTabLeftMargin, theCurrentMenuColor, theTextMenuColor, arrowIcon, iconTextGap, sbTabTopBorderColor, sbTabBottomBorderColor, sbTabRightInnerBorderColor, sbTabRightOuterBorderColor, sbTabIsOpaque));
				}
				catch(Exception e)
				{
					sbMap.put((String)sbUIStrings[i],"");
				} 
                    }
}
catch(Exception e)
{
	e.printStackTrace();
}
}    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel EMailOptinEnabledPanel;
    private javax.swing.JPanel EMailOptinPanelMainContainer;
    private javax.swing.JPanel EMailOptinSettingsPanelItem1;
    private javax.swing.JPanel OptinCentralContentLeftMarginPanel;
    private javax.swing.JPanel OptinCentralContentPanel;
    private javax.swing.JPanel OptinCentralContentRightMarginPanel;
    private javax.swing.JPanel OptinContentPanel;
    private javax.swing.JPanel OptinContentPanelItem1;
    private javax.swing.JPanel OptinContentPanelItem2;
    private javax.swing.JPanel OptinPrivacyPolicyPanel;
    private javax.swing.JPanel OptinSettingsPanelItem3;
    private javax.swing.JPanel OptinSettingsPanelItem4;
    private javax.swing.JPanel OptinSettingsPanelItem7;
    private javax.swing.JPanel OptinTitlePanel2;
    private javax.swing.JPanel OptinTitlePanel3;
    private javax.swing.JPanel OptinTitleRightPanel2;
    private SBTab PaymentMenuLabelActionsButton;
    private SBTab PaymentMenuLabelConfigButton;
    private SBTab PaymentMenuLabelHTMLFormInputsButton;
    private SBTab PaymentMenuLabelUIStringsButton;
    private javax.swing.JPanel PaymentsContentBottomPanel;
    private javax.swing.JPanel PaymentsContentTopPanel;
    private javax.swing.JPanel PaymentsMenuLeftSpaceFiller;
    private javax.swing.JPanel LeftMenuPanelBottomPanel;
    private javax.swing.JPanel ProjectMenuButtonPanel;
    private SBSpacer ProjectMenuButtonPanelBottom;
    private SBTab ProjectMenuButtonPanelTop;
    private javax.swing.JPanel ProjectMenuPanel;
    private javax.swing.JPanel ProjectSelectionContentPanel;
    private javax.swing.JButton btnEMailOptinFormAutomaticConfiguration;
    private javax.swing.JButton btnEMailOptinFormPreview;
    private javax.swing.JCheckBox cbEnablePrivacyPolicy;
    private javax.swing.JCheckBox cbOptinEnabled;
    private javax.swing.JLabel lEMailOptinFormActionURL;
    private javax.swing.JRadioButton optinRadioGetRequestMethod;
    private javax.swing.JRadioButton optinRadioPostRequestMethod;
    private javax.swing.JLabel optinRequestMethodLabel;
    private javax.swing.JTextField tfEMailOptinFormActionURL;
    private ContentAreaHeaderPanel contentProjectPanel;
    private javax.swing.JPanel contentPanel;
    // End of variables declaration//GEN-END:variables
  private EAPanel TheContentPanelReference = new EAPanel();
  private void setContentPanel(EAPanel theContentPanel)
  {
    try
    {
	 getDataUpdate();
       TheContentPanelReference.setVisible(false);
       ProjectSelectionContentPanel.remove(TheContentPanelReference);        
       TheContentPanelReference = theContentPanel;
       ProjectSelectionContentPanel.add(TheContentPanelReference);     
       TheContentPanelReference.setVisible(true);

    }
    catch(Exception e)
    {
        System.out.println(e);
    }
  }  

  public void getDataUpdate()
  {
	try
	{
		TheContentPanelReference.getDataUpdate();
	}
	catch(Exception e)
	{
		e.printStackTrace();
	}
  }   
}
